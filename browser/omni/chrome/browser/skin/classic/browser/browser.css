
@namespace html url("http://www.w3.org/1999/xhtml");

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*** Status and progress indicator ***/

#downloads-indicator-anchor {
  min-width: 16px;
  min-height: 16px;
}

#downloads-indicator-progress-outer {
  width: 16px;
  height: 16px;
  background-size: 16px;
  background: url("chrome://browser/skin/downloads/download-icons.svg#default-bar") center no-repeat;
}

#downloads-button[attention="success"] > .toolbarbutton-badge-stack > #downloads-indicator-anchor > #downloads-indicator-icon,
#downloads-button[attention="success"] > .toolbarbutton-badge-stack > #downloads-indicator-anchor > #downloads-indicator-progress-outer {
  -moz-context-properties: fill, fill-opacity;
  fill: var(--toolbarbutton-icon-fill-attention);
  fill-opacity: 1;
}
#downloads-button[progress] > .toolbarbutton-badge-stack > #downloads-indicator-anchor > #downloads-indicator-progress-outer {
  background: url("chrome://browser/skin/downloads/download-icons.svg#progress-bar-bg") center no-repeat;
}

#downloads-indicator-icon {
  -moz-context-properties: fill, fill-opacity;
  background-image: url("chrome://browser/skin/downloads/download-icons.svg#arrow");
  width: 16px;
  height: 16px;
}

#downloads-indicator-progress-inner {
  background: url("chrome://browser/skin/downloads/download-icons.svg#progress-bar-fg") left no-repeat;
  margin-right: 16px;
  -moz-context-properties: fill;
  fill: var(--toolbarbutton-icon-fill-attention);
  background-size: 16px;
  /* From javascript side we use animation delay from 0s to -100s to show
   * corresponding frames needed for progress.
   * animation-delay is set to a positive value to make nothing shown.
   */
  animation-play-state: paused;
  animation-delay: 1s;
  animation-duration: 100s;
  animation-timing-function: linear;
  animation-name: indicatorArrowProgress;
}

#downloads-indicator-progress-inner:-moz-locale-dir(rtl) {
  background-position: right;
  animation-name: indicatorArrowProgressRTL;
  margin-left: 16px;
  margin-right: 0;
}

@keyframes indicatorArrowProgress {
  0% {
    margin-right: 15px;
  }
  100% {
    margin-right: 1px;
  }
}

@keyframes indicatorArrowProgressRTL {
  0% {
    margin-left: 15px;
  }
  100% {
    margin-left: 1px;
  }
}

/*** Status badges ***/

#downloads-button[attention="warning"] > .toolbarbutton-badge-stack > .toolbarbutton-badge,
#downloads-button[attention="severe"] > .toolbarbutton-badge-stack > .toolbarbutton-badge {
  display: -moz-box;
  height: 8px;
  width: 8px;
  min-width: 0;
  border-radius: 50%;
  /* "!important" is necessary to override the rule in toolbarbutton.css */
  margin-top: -1px !important;
  margin-right: -2px !important;
}

#downloads-button[cui-areatype="toolbar"] > .toolbarbutton-badge-stack > .toolbarbutton-badge {
  height: 7px;
  width: 7px;
}

#downloads-button[attention="severe"] > .toolbarbutton-badge-stack > .toolbarbutton-badge {
  background: #D90000;
}

#downloads-button[attention="warning"] > .toolbarbutton-badge-stack > .toolbarbutton-badge {
  background: #FFBF00;
}

#downloads-button[attention="severe"] > .toolbarbutton-badge-stack > .toolbarbutton-badge:-moz-window-inactive,
#downloads-button[attention="warning"] > .toolbarbutton-badge-stack > .toolbarbutton-badge:-moz-window-inactive {
  filter: none;
}

/*** Download notifications ***/

#downloads-button[notification="start"] > .toolbarbutton-badge-stack > #downloads-indicator-anchor > #downloads-indicator-icon {
  animation-name: downloadsIndicatorStartDip;
  /* Upon changing the duration_delay below, please keep the delay time of
     setTimeout() identical in indicator.js for this animation.

     Timing here needs to align with the animation on #downloads-indicator-notification
  */
  animation-duration: 360ms;
  animation-delay: 400ms;
  animation-iteration-count: 1;
}

@keyframes downloadsIndicatorStartDip {
  0% {
    transform: translateY(0);
    animation-timing-function: linear;
  }
  50% {
    transform: translateY(0);
    animation-timing-function: ease-out;
  }
  88% {
    transform: translateY(3px);
    animation-timing-function: ease-out;
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes downloadsIndicatorFinishPulse {
  from  { transform: scale(1); }
  37.5% { transform: scale(1.4); animation-timing-function: ease-out; }
  to    { transform: scale(1); animation-timing-function: ease-in; }
}

#downloads-button[notification="finish"] > .toolbarbutton-badge-stack > #downloads-indicator-anchor > #downloads-indicator-icon {
  animation-name: downloadsIndicatorFinishPulse;
  animation-delay: 250ms;
  animation-duration: 300ms;
  animation-iteration-count: 2;
}

#downloads-animation-container {
  min-height: 1px;
  min-width: 1px;
  height: 1px;
  margin-bottom: -1px;
  /* Makes the outermost animation container element positioned, so that its
     contents are rendered over the main browser window in the Z order.
     This is required by the animated event notification. */
  position: relative;
  /* The selected tab may overlap #downloads-indicator-notification */
  z-index: 5;
}

/* download start animation */

#downloads-notification-anchor {
  width: 42px; /* Width of each frame within the SVG sprite */
  height: 98px; /* Height of each frame within the SVG sprite */
  overflow: hidden;
  /* animation is not directional and shouldn't be reversed in RTL */
  direction: ltr;
}

#downloads-indicator-notification {
  opacity: 0;
  min-width: 1344px;
  height: 98px; /* Height is equal to height of each frame in the SVG animation */
  -moz-context-properties: fill;
  fill: #737373;
}

@keyframes downloadsIndicatorNotificationStart {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-1302px);
  }
}

#downloads-notification-anchor[notification="start"] > #downloads-indicator-notification {
  opacity: 1;
  background: url("chrome://browser/skin/downloads/notification-start-animation.svg") 0 center no-repeat;
  transform: translateX(0px);
  animation-name: downloadsIndicatorNotificationStart;
  animation-duration: 540ms;
  animation-delay: 64ms;
  animation-timing-function: steps(31);
}
.extension-controlled-notification > .popup-notification-body-container > .popup-notification-body {
  width: 30em;
}

.extension-controlled-notification > .popup-notification-body-container > .popup-notification-body > hbox > vbox > .popup-notification-description {
  font-size: 1.3em;
  font-weight: lighter;
}

.extension-controlled-notification {
  margin-bottom: 0;
}

.extension-controlled-notification popupnotificationcontent > description > .extension-controlled-icon {
  height: 16px;
  width: 16px;
  vertical-align: bottom;
}

.extension-controlled-icon.alltabs-icon {
  background: url("chrome://global/skin/icons/arrow-dropdown-16.svg");
  /* This icon has a lot of extra space to the sides, reduce that a little. */
  margin: 0 -1px 1px;
}

.extension-controlled-notification > .popup-notification-body-container > .popup-notification-body > .popup-notification-warning,
.extension-controlled-notification > .popup-notification-body-container > .popup-notification-icon {
  display: none;
}


:root {
  /* Note: Setting this to 0 (without px) breaks CSS calculations for OSX. */
  --space-above-tabbar: 0px;
  --tabs-navbar-shadow-size: 1px;
}

:root[extradragspace][tabsintitlebar]:not([inFullscreen]) {
  --space-above-tabbar: 8px;
}

@media (min-resolution: 1.5dppx) {
  :root {
    --tabs-navbar-shadow-size: 0.5px;
  }
}

@media (min-resolution: 3dppx) {
  :root {
    --tabs-navbar-shadow-size: 0.33px;
  }
}

/* Increase contrast of UI links on dark themes */

:root[lwt-popup-brighttext] panel .text-link {
  color: #45a1ff;
}

/* Toolbar / content area border */

#navigator-toolbox {
  border-bottom: 1px solid var(--chrome-content-separator-color);
}

:root[customizing] #navigator-toolbox {
  border-bottom-style: none;
}

:root[sessionrestored] #nav-bar:-moz-lwtheme {
  transition: background-color 0.1s cubic-bezier(.17,.67,.83,.67);
}

/* Bookmark toolbar */

#PersonalToolbar {
  overflow: -moz-hidden-unscrollable;
  max-height: 4em;
  padding: 0 6px 2px;
}

:root[uidensity=compact] #PersonalToolbar {
  padding-inline: 2px;
}

:root[sessionrestored] #PersonalToolbar {
  transition: min-height 170ms ease-out, max-height 170ms ease-out, background-color 0.1s cubic-bezier(.17,.67,.83,.67);
}

#PersonalToolbar[collapsed=true] {
  min-height: 0.1px;
  max-height: 0;
}

:root[sessionrestored] #PersonalToolbar[collapsed=true] {
  transition: min-height 170ms ease-out, max-height 170ms ease-out, visibility 170ms linear;
}

#PersonalToolbar[customizing] {
  outline: 1px dashed;
  outline-offset: -3px;
  -moz-outline-radius: 2px;
}

#PersonalToolbar[customizing]:empty {
  /* Avoid the toolbar having no height when there's no items in it */
  min-height: 22px;
}

/* rules for menupopup drop indicators */
menupopup::part(drop-indicator-bar) {
  position: relative;
  /* these two margins must together compensate the indicator's height */
  margin-top: -1px;
  margin-bottom: -1px;
}

menupopup::part(drop-indicator) {
  list-style-image: none;
  height: 2px;
  margin-inline-end: -4em;
  background-color: Highlight;
}

/* Required for Library animation */

#navigator-toolbox {
  position: relative;
}

#library-animatable-box {
  display: none;
}

#library-animatable-box[animate] {
  display: -moz-box;
}

/* Back / Forward context menu */

.unified-nav-back,
.unified-nav-forward {
  -moz-context-properties: fill;
  fill: currentColor;
}

.unified-nav-back[_moz-menuactive]:-moz-locale-dir(ltr),
.unified-nav-forward[_moz-menuactive]:-moz-locale-dir(rtl) {
  list-style-image: url("chrome://browser/skin/back.svg") !important;
}

.unified-nav-forward[_moz-menuactive]:-moz-locale-dir(ltr),
.unified-nav-back[_moz-menuactive]:-moz-locale-dir(rtl) {
  list-style-image: url("chrome://browser/skin/forward.svg") !important;
}

/* Private browsing and accessibility indicators */

.accessibility-indicator,
.private-browsing-indicator {
  background-repeat: no-repeat;
  background-size: 100% auto;
  background-position: center;
  width: 24px;
  height: 24px;
  margin-left: 7px;
  margin-right: 7px;
  position: relative;
  /* Need to ensure this gets positioned on top of the position:relative #navigator-toolbox
   * in case the dark/light themes give that item a background. */
  z-index: 1;
}

.accessibility-indicator {
  background-image: url("chrome://browser/skin/accessibility.svg");
  -moz-user-focus: normal;
  /* Clear default button styling */
  -moz-appearance: none;
  margin-top: unset;
  margin-bottom: unset;
  min-width: unset;
  color: unset;
  text-shadow: unset;
}

.accessibility-indicator:-moz-any(:hover, :active, :focus, :-moz-focusring) {
  background-image: url("chrome://browser/skin/accessibility-active.svg");
  outline: 0;
}

.private-browsing-indicator {
  background-image: url("chrome://browser/skin/private-browsing.svg");
}

:root:not([accessibilitymode]) .accessibility-indicator,
:root:not([privatebrowsingmode=temporary]) .private-browsing-indicator {
  display: none;
}

/* End private browsing and accessibility indicators */

/* Override theme colors since the picker uses extra colors that
   themes cannot set */
#DateTimePickerPanel {
  --arrowpanel-background: var(--default-arrowpanel-background);
  --arrowpanel-color: var(--default-arrowpanel-color);
  --arrowpanel-border-color: var(--default-arrowpanel-border-color);
}

#DateTimePickerPanel[side="top"],
#DateTimePickerPanel[side="bottom"] {
  margin-left: 0;
  margin-right: 0;
}

#widget-overflow .webextension-popup-browser {
  background: #fff;
}

#addon-progress-notification-progressmeter {
  margin: 2px 4px;
}

/* Permissions popup learn more link. */
#addon-webext-perm-info {
  margin-inline-start: 0;
}

/* Contextual Feature Recommendation popup-notification */

#cfr-notification-header {
  width: 100%;
  text-align: center;
  box-shadow: 0px 1px 0px rgba(0, 0, 0, 0.2);
}

#cfr-notification-header-stack {
  width: 100%;
}

#cfr-notification-header-label {
  margin: 9px;
  font-size: 13px;
  font-weight: 600;
}

#cfr-notification-header-link {
  margin: 7px;
  color: inherit;
  cursor: default;
}

#cfr-notification-header-image {
  width: 19px;
  height: 19px;
  padding: 2px;
  -moz-context-properties: fill, fill-opacity;
  fill: currentColor;
  fill-opacity: 0.6;
  list-style-image: url(resource://activity-stream/data/content/assets/glyph-help-24.svg);
}

#cfr-notification-header-image:hover {
  background-color: hsla(0,0%,70%,.2);
  border-radius: 2px;
}

#contextual-feature-recommendation-notification {
  width: 343px;
}

#contextual-feature-recommendation-notification[data-notification-bucket="CFR_SOCIAL_TRACKING_PROTECTION"] {
  width: 386px;
}

#contextual-feature-recommendation-notification .popup-notification-icon {
  margin-inline-end: 4px;
}

#contextual-feature-recommendation-notification .cfr-doorhanger-large-icon {
  width: 64px;
  height: 64px;
}

#contextual-feature-recommendation-notification .popup-notification-body-container {
  width: 100%;
  padding-bottom: 0;
}

#contextual-feature-recommendation-notification popupnotificationcontent {
  margin-top: 0;
}

#contextual-feature-recommendation-notification description {
  margin-bottom: 0;
  font-size: 13px;
}

#cfr-notification-footer-text-and-addon-info {
  display: block;
  padding: 10px var(--arrowpanel-padding);
  font-size: 13px;
}

#contextual-feature-recommendation-notification[data-notification-category="message_and_animation"] .popup-notification-body-container,
#contextual-feature-recommendation-notification[data-notification-category="message_and_animation"] #cfr-notification-footer-addon-info,
#contextual-feature-recommendation-notification[data-notification-category="addon_recommendation"] #cfr-notification-feature-steps,
#contextual-feature-recommendation-notification[data-notification-category="icon_and_message"] .popup-notification-footer-container {
  display: none;
}

/*
 * `icon_and_message` CFR doorhanger with: icon, title and subtitle.
 * No panel header is shown
 */
#contextual-feature-recommendation-notification[data-notification-category="icon_and_message"] #cfr-notification-header {
  display: none;
}

#contextual-feature-recommendation-notification[data-notification-category="icon_and_message"] .popup-notification-description {
  font-size: 16px;
  font-weight: 600;
  margin-bottom: 4px;
}

#contextual-feature-recommendation-notification[data-notification-category="icon_and_message"] popupnotificationcontent {
  display: block; /* This forces the subtitle content to wrap */
}

#contextual-feature-recommendation-notification[data-notification-category="icon_and_message"] .popup-notification-body-container {
  padding-bottom: 20px;
}

#contextual-feature-recommendation-notification[data-notification-bucket="CFR_SOCIAL_TRACKING_PROTECTION"] .popup-notification-description {
  font-size: 13px;
}

#cfr-notification-feature-steps {
  display: flex;
  flex-direction: column;
  margin-top: 10px;
}

#cfr-notification-feature-steps li {
  padding-inline-start: 9px;
  position: relative;
}

#cfr-notification-feature-steps li:not(:last-child) {
  margin-bottom: 5px;
}

#cfr-notification-feature-steps li:before {
  content: "\2022";
  position: absolute;
  inset-inline-start: 0;
}

#contextual-feature-recommendation-notification[data-notification-category="message_and_animation"] #cfr-notification-footer-text {
  font-size: 14px;
  font-weight: 600;
}

#cfr-notification-footer-text,
#cfr-notification-footer-users,
#cfr-notification-footer-learn-more-link {
  margin: 0;
}

#contextual-feature-recommendation-notification .popup-notification-learnmore-link,
#cfr-notification-footer-users,
#cfr-notification-footer-learn-more-link {
  font-size: 12px;
}

#cfr-notification-footer-addon-info {
  align-items: center;
  display: flex;
  margin-top: 10px;
  margin-bottom: 6px;
}

#cfr-notification-footer-filled-stars,
#cfr-notification-footer-empty-stars {
  -moz-context-properties: fill, fill-opacity;
  background-image: url(resource://activity-stream/data/content/assets/glyph-star-17.svg);
  background-size: 17px;
  fill: currentColor;
  fill-opacity: 0.7;
  height: 16px;
}

#cfr-notification-footer-filled-stars:-moz-locale-dir(rtl),
#cfr-notification-footer-empty-stars {
  background-position-x: right;
}

#cfr-notification-footer-filled-stars,
#cfr-notification-footer-empty-stars:-moz-locale-dir(rtl) {
  background-position-x: left;
}

#cfr-notification-footer-empty-stars[tooltiptext] {
  margin-inline-end: 6px;
  opacity: 0.3;
}

#cfr-notification-footer-users {
  opacity: 0.7;
}

#cfr-notification-footer-spacer {
  flex-grow: 1;
}

#cfr-notification-footer-pintab-animation-container {
  height: 173px;
  padding-top: 129px;
  position: relative;
  width: 343px;
}

#cfr-notification-footer-pintab-animation-container:before {
  content: "";
  background-image: url("resource://activity-stream/data/content/assets/cfr_pinnedtab_animated.png");
  background-position: top center;
  background-repeat: no-repeat;
  background-size: cover;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

#cfr-notification-footer-pintab-animation-container:-moz-locale-dir(rtl):before {
  transform: scaleX(-1);
}

@media (min-resolution: 2dppx) {
  #cfr-notification-footer-pintab-animation-container:before {
    background-image: url("resource://activity-stream/data/content/assets/cfr_pinnedtab_animated@2x.png");
  }
}

#contextual-feature-recommendation-notification[data-notification-category="addon_recommendation"] #cfr-notification-footer-pintab-animation-container {
  display: none;
}

#cfr-notification-footer-pintab-animation-container:not([animate]):before,
#cfr-notification-footer-pintab-animation-container[paused]:before,
:root[lwt-popup-brighttext] #cfr-notification-footer-pintab-animation-container:not([animate]):before,
:root[lwt-popup-brighttext] #cfr-notification-footer-pintab-animation-container[paused]:before {
  background-image: url("resource://activity-stream/data/content/assets/cfr_pinnedtab_static.png");
}

@media (min-resolution: 2dppx) {
  #cfr-notification-footer-pintab-animation-container:not([animate]):before,
  #cfr-notification-footer-pintab-animation-container[paused]:before,
  :root[lwt-popup-brighttext] #cfr-notification-footer-pintab-animation-container:not([animate]):before,
  :root[lwt-popup-brighttext] #cfr-notification-footer-pintab-animation-container[paused]:before {
    background-image: url("resource://activity-stream/data/content/assets/cfr_pinnedtab_static@2x.png");
  }
}

:root[lwt-popup-brighttext] #cfr-notification-footer-pintab-animation-container:before {
  background-image: url("resource://activity-stream/data/content/assets/cfr_pinnedtab_animated_darktheme.png");
}

@media (min-resolution: 2dppx) {
  :root[lwt-popup-brighttext] #cfr-notification-footer-pintab-animation-container:before {
    background-image: url("resource://activity-stream/data/content/assets/cfr_pinnedtab_animated_darktheme@2x.png");
  }
}

#cfr-notification-footer-animation-controls {
  background: linear-gradient(transparent 0%, rgba(255, 255, 255, 0.95) 35%);
  padding: 20px var(--arrowpanel-padding) 10px;
  position: relative;
  z-index: 1;
}

:root[lwt-popup-brighttext] #cfr-notification-footer-animation-controls {
  margin-inline-start: 13px;
}

#cfr-notification-footer-pintab-animation-container:not([animate]) #cfr-notification-footer-animation-controls {
  visibility: hidden;
}

#cfr-notification-footer-animation-button {
  background-image: url("resource://activity-stream/data/content/assets/glyph-pause-12.svg");
  background-position: right center;
  background-repeat: no-repeat;
  background-size: 12px 10px;
  -moz-context-properties: fill;
  fill: rgba(12, 12, 13, 0.8);
  padding-inline-end: 10px;
}

#cfr-notification-footer-pintab-animation-container[paused] #cfr-notification-footer-animation-button {
  background-image: url("resource://activity-stream/data/content/assets/glyph-play-12.svg");
}

#cfr-notification-footer-animation-button:-moz-locale-dir(rtl) {
  background-position-x: left;
}

#cfr-notification-footer-animation-label {
  font-weight: 600;
  line-height: 11px;
}

#cfr-notification-footer-animation-button,
#cfr-notification-footer-animation-label {
  color: rgba(12, 12, 13, 0.8);
  cursor: pointer;
}

#content-mask {
  background: rgba(0, 0, 0, 0.5);
}

:root {
  --toolbar-non-lwt-bgcolor: -moz-dialog;
  --toolbar-non-lwt-textcolor: -moz-dialogtext;
  --toolbar-non-lwt-bgimage: linear-gradient(rgba(255,255,255,.15), rgba(255,255,255,.15));

  --toolbarbutton-border-radius: 4px;
  --toolbarbutton-vertical-text-padding: calc(var(--toolbarbutton-inner-padding) - 1px);
  --toolbarbutton-icon-fill-opacity: .85;

  --panel-separator-color: ThreeDShadow;
  --arrowpanel-dimmed: hsla(0,0%,80%,.35);
  --arrowpanel-dimmed-further: hsla(0,0%,80%,.5);
  --arrowpanel-dimmed-even-further: hsla(0,0%,80%,.8);

  --urlbar-separator-color: ThreeDShadow;

  --chrome-content-separator-color: ThreeDShadow;
}

#navigator-toolbox {
  --tabs-border-color: rgba(0,0,0,.3);
}

#tabbrowser-tabs {
  --tab-line-color: highlight;
}

:root:-moz-lwtheme {
  --chrome-content-separator-color: rgba(0,0,0,.3);

  --panel-separator-color: hsla(210,4%,10%,.14);
}

:root[lwt-popup-brighttext] {
  --panel-separator-color: rgba(249,249,250,.1);

  --arrowpanel-dimmed: rgba(249,249,250,.1);
  --arrowpanel-dimmed-further: rgba(249,249,250,.15);
  --arrowpanel-dimmed-even-further: rgba(249,249,250,.2);
}

#menubar-items {
  -moz-box-orient: vertical; /* for flex hack */
}

#navigator-toolbox {
  -moz-appearance: none;
  background-color: transparent;
  border-top: none;
}

.browser-toolbar {
  padding: 0;
}

.browser-toolbar:not(.titlebar-color) {
  background-color: var(--toolbar-bgcolor);
  background-image: var(--toolbar-bgimage);
  color: var(--toolbar-color);
  -moz-appearance: none;
  border-style: none;
}

#nav-bar:not([tabs-hidden="true"]) {
  box-shadow: 0 calc(-1 * var(--tabs-navbar-shadow-size)) 0 var(--tabs-border-color);
  /* This is needed for some toolbar button animations. Gross :( */
  position: relative;
}

#browser-bottombox {
  /* opaque for layers optimization */
  background-color: -moz-Dialog;
}

/* Bookmark menus */
menu.bookmark-item,
menuitem.bookmark-item {
  min-width: 0;
  max-width: 32em;
}

.bookmark-item:not(.subviewbutton) > .menu-iconic-left {
  margin-top: 0;
  margin-bottom: 0;
}

.bookmark-item > .menu-iconic-left > .menu-iconic-icon {
  padding-inline-start: 0px;
}

/* Bookmark drag and drop styles */
.bookmark-item[dragover-into="true"] {
  background: Highlight !important;
  color: HighlightText !important;
}

/* Bookmarks toolbar */
#PlacesToolbarDropIndicator {
  list-style-image: url(chrome://browser/skin/places/toolbarDropMarker.png);
}

.bookmark-item[cutting] > .toolbarbutton-icon,
.bookmark-item[cutting] > .menu-iconic-left > .menu-iconic-icon {
  opacity: 0.5;
}

.bookmark-item[cutting] > .toolbarbutton-text,
.bookmark-item[cutting] > .menu-iconic-left > .menu-iconic-text {
  opacity: 0.7;
}

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

:root {
  --toolbarbutton-hover-transition-duration: 150ms;

  --toolbarbutton-outer-padding: 2px;
  --toolbarbutton-inner-padding: 6px;

  --toolbarbutton-focus-outline: 2px solid currentColor;

  /* These hover and active colors should work on both light and dark
     backgrounds. We'll later set colors that cater for light and dark
     backgrounds specifically when we can detect them. */
  --toolbarbutton-hover-background: var(--lwt-toolbarbutton-hover-background, hsla(0,0%,70%,.4));
  --toolbarbutton-active-background: var(--lwt-toolbarbutton-active-background, hsla(0,0%,70%,.6));

  --backbutton-background: hsla(0,100%,100%,.8);
  --backbutton-hover-background: var(--backbutton-background);
  --backbutton-active-background: var(--toolbarbutton-active-background);
  --backbutton-border-color: hsla(240,5%,5%,.3);

  /* This default value of --toolbarbutton-height is defined to prevent
     CSS errors for an invalid variable. The value should not get used,
     as a more specific value should be set when the value will be used. */
  --toolbarbutton-height: 0;
}

:root[uidensity=compact] {
  --toolbarbutton-outer-padding: 1px;
}

:root[uidensity=touch] {
  --toolbarbutton-inner-padding: 9px;
}

/* We use :-moz-lwtheme-* for toolbarbuttons that aren't inside a toolbar, and
   [brighttext] to cater for OS themes where :-moz-lwtheme-* doesn't apply. */
:root:-moz-lwtheme-darktext,
toolbar:not([brighttext]) {
  --toolbarbutton-hover-background: var(--lwt-toolbarbutton-hover-background, hsla(240,5%,5%,.1));
  --toolbarbutton-active-background: var(--lwt-toolbarbutton-active-background, hsla(240,5%,5%,.15));
}

:root:-moz-lwtheme-brighttext,
toolbar[brighttext] {
  --toolbarbutton-hover-background: var(--lwt-toolbarbutton-hover-background, hsla(0,0%,70%,.4));
  --toolbarbutton-active-background: var(--lwt-toolbarbutton-active-background, hsla(0,0%,70%,.6));

  --backbutton-background: var(--toolbarbutton-hover-background);
  --backbutton-hover-background: var(--toolbarbutton-active-background);
  --backbutton-active-background: hsla(0,0%,100%,.4);
}

/* ::::: primary toolbar buttons ::::: */

.tabbrowser-arrowscrollbox > .scrollbutton-up[disabled=true],
.tabbrowser-arrowscrollbox > .scrollbutton-down[disabled=true],
:root:not([customizing]) .toolbarbutton-1[disabled=true],
/* specialcase the overflow and the hamburger button so they show up disabled in customize mode. */
#nav-bar-overflow-button[disabled=true],
#PanelUI-menu-button[disabled=true] {
  opacity: 0.4;
}

.toolbarbutton-1 > .toolbarbutton-icon {
  margin-inline-end: 0 !important;
}

.toolbarbutton-1 > .toolbarbutton-icon,
.toolbarbutton-1 > .toolbarbutton-badge-stack > .toolbarbutton-icon {
  width: 16px;
}

#TabsToolbar .toolbarbutton-1,
.tabbrowser-arrowscrollbox > .scrollbutton-up,
.tabbrowser-arrowscrollbox > .scrollbutton-down {
  margin: 0 0 var(--tabs-navbar-shadow-size) !important;
}

.tabbrowser-arrowscrollbox > .scrollbutton-up,
.tabbrowser-arrowscrollbox > .scrollbutton-down {
  -moz-appearance: none;
  padding: 0 var(--toolbarbutton-inner-padding) !important;
}

#navigator-toolbox:not(:hover) .tabbrowser-arrowscrollbox > .scrollbutton-down:not([highlight]) {
  transition: 1s background-color ease-out;
}

.tabbrowser-arrowscrollbox > .scrollbutton-down[highlight] {
  background-color: Highlight;
}

.findbar-button {
  -moz-appearance: none;
  color: inherit;
}

toolbar .toolbarbutton-1 {
  -moz-appearance: none;
  margin: 0;
  padding: 0 var(--toolbarbutton-outer-padding);
  -moz-box-pack: center;
}

:root:not([uidensity=compact]) #PanelUI-button {
  padding-inline-start: 5px;
}

:root:not([uidensity=compact]) #PanelUI-menu-button {
  padding-inline-end: 5px;
}

toolbar .toolbarbutton-1 > menupopup {
  margin-top: -3px;
}

.findbar-button,
toolbarbutton.bookmark-item:not(.subviewbutton),
toolbar .toolbarbutton-1 > .toolbarbutton-icon,
toolbar .toolbarbutton-1 > .toolbarbutton-text,
toolbar .toolbarbutton-1 > .toolbarbutton-badge-stack {
  padding: var(--toolbarbutton-inner-padding);
  border-radius: var(--toolbarbutton-border-radius);
}

toolbar .toolbarbutton-1 > .toolbarbutton-icon {
  /* horizontal padding + actual icon width */
  width: calc(2 * var(--toolbarbutton-inner-padding) + 16px);
  height: calc(2 * var(--toolbarbutton-inner-padding) + 16px);
}

.bookmark-item > .toolbarbutton-menu-dropmarker,
toolbar .toolbarbutton-1 > .toolbarbutton-menu-dropmarker {
  display: none;
}

toolbar .toolbarbutton-1 > .toolbarbutton-text {
  padding-top: var(--toolbarbutton-vertical-text-padding);
  padding-bottom: 0;
  /* To make the hover feedback line up with sibling buttons, it needs the same
   * height as the button icons and the same vertical padding, but as a minimum,
   * because otherwise an increase in text sizes would break things.
   */
  min-height: calc(16px + 2 * var(--toolbarbutton-inner-padding));
}

toolbar .toolbaritem-combined-buttons {
  margin-left: 2px;
  margin-right: 2px;
}

toolbar .toolbaritem-combined-buttons > .toolbarbutton-1 {
  padding-left: 0;
  padding-right: 0;
}

toolbar .toolbaritem-combined-buttons:not(:hover) > separator {
  content: "";
  display: -moz-box;
  width: 1px;
  height: 16px;
  margin-inline-end: -1px;
  background-image: linear-gradient(currentColor 0, currentColor 100%);
  background-position: center;
  background-repeat: no-repeat;
  background-size: 1px 16px;
  opacity: .2;
}

toolbar[brighttext] .toolbaritem-combined-buttons > separator {
  opacity: .3;
}

#PersonalToolbar .toolbarbutton-1:not([disabled=true]):not([checked]):not([open]):not(:active):hover,
.tabbrowser-arrowscrollbox > .scrollbutton-up:not([disabled=true]):hover,
.tabbrowser-arrowscrollbox > .scrollbutton-down:not([disabled=true]):hover,
.findbar-button:not(:-moz-any([checked="true"],[disabled="true"])):hover,
toolbarbutton.bookmark-item:not(.subviewbutton):hover:not([disabled="true"]):not([open]),
toolbar .toolbarbutton-1:not([disabled=true]):not([checked]):not([open]):not(:active):hover > .toolbarbutton-icon,
toolbar .toolbarbutton-1:not([disabled=true]):not([checked]):not([open]):not(:active):hover > .toolbarbutton-text,
toolbar .toolbarbutton-1:not([disabled=true]):not([checked]):not([open]):not(:active):hover > .toolbarbutton-badge-stack {
  background-color: var(--toolbarbutton-hover-background);
  color: inherit;
}

#PersonalToolbar .toolbarbutton-1:not([disabled=true]):-moz-any([open],[checked],:hover:active),
.findbar-button:not([disabled=true]):-moz-any([checked="true"],:hover:active),
toolbarbutton.bookmark-item:not(.subviewbutton):hover:active:not([disabled="true"]),
toolbarbutton.bookmark-item[open="true"],
toolbar .toolbarbutton-1:not([disabled=true]):-moz-any([open],[checked],:hover:active) > .toolbarbutton-icon,
toolbar .toolbarbutton-1:not([disabled=true]):-moz-any([open],[checked],:hover:active) > .toolbarbutton-text,
toolbar .toolbarbutton-1:not([disabled=true]):-moz-any([open],[checked],:hover:active) > .toolbarbutton-badge-stack {
  background-color: var(--toolbarbutton-active-background);
  color: inherit;
}

toolbar .toolbarbutton-1[checked]:not(:active):hover > .toolbarbutton-icon {
  background-color: var(--toolbarbutton-hover-background);
  transition: background-color .4s;
}

/* Keyboard focus styling */
#PersonalToolbar .toolbarbutton-1:-moz-focusring,
.findbar-button:-moz-focusring,
findbar toolbarbutton.tabbable:-moz-focusring,
toolbarbutton.bookmark-item:not(.subviewbutton):-moz-focusring,
toolbar:not(#PersonalToolbar) .toolbarbutton-1:-moz-focusring > .toolbarbutton-icon,
toolbar:not(#PersonalToolbar) .toolbarbutton-1:-moz-focusring > .toolbarbutton-text,
toolbar:not(#PersonalToolbar) .toolbarbutton-1:-moz-focusring > .toolbarbutton-badge-stack {
  color: inherit;
  outline: var(--toolbarbutton-focus-outline);
  -moz-outline-radius: var(--toolbarbutton-border-radius);
  outline-offset: unset;
}

:root[uidensity=compact] .findbar-button:-moz-focusring,
:root[uidensity=compact] findbar toolbarbutton.tabbable:-moz-focusring,
:root[uidensity=compact] toolbar:not(#PersonalToolbar) .toolbarbutton-1:-moz-focusring > .toolbarbutton-icon,
:root[uidensity=compact] toolbar:not(#PersonalToolbar) .toolbarbutton-1:-moz-focusring > .toolbarbutton-text,
:root[uidensity=compact] toolbar:not(#PersonalToolbar) .toolbarbutton-1:-moz-focusring > .toolbarbutton-badge-stack {
  outline-offset: -1px;
}

#PersonalToolbar .toolbarbutton-1:-moz-focusring,
toolbarbutton.bookmark-item:not(.subviewbutton):-moz-focusring {
  outline-offset: -2px;
}

toolbar .toolbarbutton-1:-moz-focusring {
  outline: none;
}

:root:not([uidensity=compact]) #back-button {
  padding-top: 3px;
  padding-bottom: 3px;
  padding-inline-start: 3px;
  padding-inline-end: 0;
  position: relative !important;
  z-index: 1 !important;
  border-radius: 0 10000px 10000px 0;
}

:root:not([uidensity=compact]) #back-button:-moz-locale-dir(rtl) {
  border-radius: 10000px 0 0 10000px;
}

#back-button > menupopup {
  margin-top: -1px !important;
}

:root:not([uidensity=compact]) #back-button > .toolbarbutton-icon {
  background-color: var(--backbutton-background);
  background-origin: padding-box;
  background-clip: padding-box;
  border: 1px solid var(--backbutton-border-color);
  border-radius: 10000px;
  width: 34px;
  height: 34px;
  padding: 8px;
  transition-property: box-shadow;
  transition-duration: var(--toolbarbutton-hover-transition-duration);
}

:root:not([uidensity=compact]) #back-button:-moz-focusring > .toolbarbutton-icon {
  -moz-outline-radius: 10000px;
}

:root[uidensity=touch] #back-button:-moz-focusring > .toolbarbutton-icon {
  outline-offset: -2px;
}

:root[uidensity=touch] #back-button {
  padding-top: 1px;
  padding-bottom: 1px;
  padding-inline-start: 1px;
}

:root[uidensity=touch] #back-button > .toolbarbutton-icon {
  width: 38px;
  height: 38px;
  padding: 10px;
}

:root:not([uidensity=compact]) #back-button:not([disabled]):not([open]):hover > .toolbarbutton-icon {
  background-color: var(--backbutton-hover-background) !important;
  box-shadow: 0 1px 6px hsla(0,0%,0%,.1);
  border-color: hsla(240,5%,5%,.35);
}

:root:not([uidensity=compact]) #back-button[open] > .toolbarbutton-icon,
:root:not([uidensity=compact]) #back-button:not([disabled]):hover:active > .toolbarbutton-icon {
  background-color: var(--backbutton-active-background) !important;
  border-color: hsla(240,5%,5%,.40);
}

/* bookmarks menu button */

#BMB_bookmarksPopup[side="top"],
#BMB_bookmarksPopup[side="bottom"] {
  margin-left: -20px;
  margin-right: -20px;
}

#BMB_bookmarksPopup[side="left"],
#BMB_bookmarksPopup[side="right"] {
  margin-top: -20px;
  margin-bottom: -20px;
}

/* ::::: bookmark buttons ::::: */

toolbarbutton.bookmark-item:not(.subviewbutton) {
  margin: 0 2px;
  padding: 2px 4px;
  -moz-appearance: none;
}

:root[uidensity=compact] toolbarbutton.bookmark-item:not(.subviewbutton) {
  margin: 0 1px;
  padding: 1px 4px;
}

:root[uidensity=touch] toolbarbutton.bookmark-item:not(.subviewbutton) {
  padding: 4px;
}

toolbarbutton.bookmark-item {
  max-width: 13em;
}

/* Not in a :not(...) clause in the rule above to avoid unduly increasing
 * that rule's specificity. */
#bookmarks-toolbar-placeholder {
  max-width: unset;
}

#PersonalToolbar .toolbarbutton-1 > .toolbarbutton-icon,
#PersonalToolbar .toolbarbutton-1 > .toolbarbutton-badge-stack,
.bookmark-item > .toolbarbutton-icon {
  width: 16px;
  height: 16px;
}

/* Force the display of the label for bookmarks */
.bookmark-item > .toolbarbutton-text {
  display: -moz-box !important;
}

#PlacesToolbarItems > .bookmark-item > .toolbarbutton-icon {
  margin-inline-end: 0;
}

#PlacesToolbarItems > .bookmark-item > .toolbarbutton-icon[label]:not([label=""]) {
  margin-inline-end: 4px;
}

/* The bookmarks toolbar is smaller than the other toolbars, so we
 * need to override the badge position to not be cut off. */
#PersonalToolbar .toolbarbutton-badge {
  margin-top: -1px !important;
}

:root[uidensity=touch] #PersonalToolbar .toolbarbutton-badge {
  margin-top: -4px !important;
}

/* Remove a pixel of margin on the end so that the badge doesn't
 * overflow the toolbar and push the button into the overflow menu. */
:root[uidensity=compact] .toolbarbutton-badge {
  margin-inline-end: -7px !important;
}

/* To allow toolbarbuttons in the bookmarks toolbar to grow in
 * height with the toolbar (like bookmark items), we apply background
 * and padding to the buttons, not the button contents. This rule
 * overrides attributes that would otherwise be duplicated. */
#PersonalToolbar .toolbarbutton-1 > .toolbarbutton-icon,
#PersonalToolbar .toolbarbutton-1 > .toolbarbutton-text,
#PersonalToolbar .toolbarbutton-1 > .toolbarbutton-badge-stack {
  padding: 0 !important;
  background: none !important;
  min-height: 16px;
}

#PersonalToolbar .toolbarbutton-1 {
  padding: 1px var(--toolbarbutton-inner-padding);
  border-radius: var(--toolbarbutton-border-radius);
}

/* Alternative style for .toolbarbutton-badge used by CFR notifications */
.toolbarbutton-badge.feature-callout {
  width: 14px;
  height: 14px;
  min-width: auto;
  box-shadow: none;
  border: none;
  padding: 0;
  display: block;
  margin: -7px 0 0 !important;
  margin-inline-end: -6px !important;
  background: url(chrome://browser/skin/badge-blue.svg);
}
:root {
  --toolbarbutton-icon-fill-attention: var(--lwt-toolbarbutton-icon-fill-attention, #0a84ff);
}

:root:-moz-lwtheme {
  --toolbarbutton-icon-fill-opacity: 1;
}

:root[lwt-popup-brighttext] panel,
toolbar[brighttext] {
  --toolbarbutton-icon-fill-attention: var(--lwt-toolbarbutton-icon-fill-attention, #45a1ff);
}

.toolbarbutton-animatable-box,
.toolbarbutton-1 {
  color: inherit !important;
  -moz-context-properties: fill, fill-opacity;
  fill: var(--lwt-toolbarbutton-icon-fill, currentColor);
  fill-opacity: var(--toolbarbutton-icon-fill-opacity);
}

.toolbarbutton-animatable-box {
  position: absolute;
  overflow: hidden;
  z-index: 2;
}

.toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  list-style-image: none;
  /* Height must be equal to height of toolbarbutton padding-box. --toolbarbutton-height
     is calculated and set during runtime by BrowserUtils.setToolbarButtonHeightProperty()
     before the animation begins. */
  height: var(--toolbarbutton-height);
}

#back-button:-moz-locale-dir(rtl) > .toolbarbutton-icon,
#forward-button:-moz-locale-dir(rtl) > .toolbarbutton-icon,
#reload-button:-moz-locale-dir(rtl) > .toolbarbutton-icon,
#nav-bar-overflow-button:-moz-locale-dir(rtl) > .toolbarbutton-icon,
#PlacesChevron:-moz-locale-dir(rtl) > .toolbarbutton-icon,
#panic-button:-moz-locale-dir(rtl) > .toolbarbutton-icon,
#PanelUI-menu-button:-moz-locale-dir(rtl) > .toolbarbutton-badge-stack > .toolbarbutton-icon {
  transform: scaleX(-1);
}

#back-button {
  list-style-image: url("chrome://browser/skin/back.svg");
}

#forward-button {
  list-style-image: url("chrome://browser/skin/forward.svg");
}

/* The animations for the reload-button and stop-button are disabled
   outside of the nav-bar due to bug 1382894. */
:-moz-any(#reload-button, #stop-button) > .toolbarbutton-animatable-box {
  display: none;
}
#nav-bar-customization-target > #stop-reload-button > :-moz-any(#reload-button, #stop-button) > .toolbarbutton-animatable-box {
  display: -moz-box;
}

#stop-reload-button[animate] > #reload-button > .toolbarbutton-icon,
#stop-reload-button[animate] > #reload-button[displaystop] + #stop-button > .toolbarbutton-icon {
  fill: transparent;
}

@keyframes reload-to-stop {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-450px);
  }
}

@keyframes reload-to-stop-rtl {
  from {
    transform: scaleX(-1) translateX(0);
  }
  to {
    transform: scaleX(-1) translateX(-450px);
  }
}

@keyframes stop-to-reload {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-450px);
  }
}

@keyframes stop-to-reload-rtl {
  from {
    transform: scaleX(-1) translateX(0);
  }
  to {
    transform: scaleX(-1) translateX(-450px);
  }
}

#stop-reload-button[animate] > #reload-button,
#stop-reload-button[animate] > #stop-button {
  position: relative;
}

#reload-button > .toolbarbutton-animatable-box,
#stop-button > .toolbarbutton-animatable-box {
  top: calc(50% - 10px); /* Vertically center the 20px tall animatable image */
  /* Since .toolbarbutton-icon uses a different width than the animatable-box,
     we need to set a padding relative to the difference in widths. */
  margin-inline-start: calc((16px + 2 * var(--toolbarbutton-inner-padding) - 18px) / 2);
  width: 18px; /* Width of each frame within the SVG sprite */
  height: 20px; /* Height of each frame within the SVG sprite */
}

#stop-reload-button[animate] > #reload-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  background-image: url("chrome://browser/skin/reload-to-stop.svg");
  width: 468px;
}

#stop-reload-button[animate] > #reload-button:not([displaystop]) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: reload-to-stop;
}

#stop-reload-button[animate] > #reload-button:not([displaystop]):-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: reload-to-stop-rtl;
}

#reload-button:not([displaystop]) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-timing-function: steps(25);
  animation-duration: 417ms;
}

#stop-reload-button[animate] > #reload-button[displaystop] + #stop-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  background-image: url("chrome://browser/skin/stop-to-reload.svg");
  width: 468px;
}

#stop-reload-button[animate] > #reload-button[displaystop] + #stop-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: stop-to-reload;
}

#stop-reload-button[animate] > #reload-button[displaystop] + #stop-button:-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: stop-to-reload-rtl;
}

#reload-button[displaystop] + #stop-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-timing-function: steps(25);
  animation-duration: 417ms;
}

#reload-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  transform: translateX(-450px);
}

#reload-button:-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  transform: scaleX(-1) translateX(-450px);
}

#reload-button[displaystop] + #stop-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  transform: translateX(-450px);
}

#reload-button[displaystop] + #stop-button:-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  transform: scaleX(-1) translateX(-450px);
}

#reload-button {
  list-style-image: url("chrome://browser/skin/reload.svg");
}

#stop-button {
  list-style-image: url("chrome://browser/skin/stop.svg");
}

#home-button {
  list-style-image: url("chrome://browser/skin/home.svg");
}

#bookmarks-toolbar-button,
#bookmarks-toolbar-placeholder {
  list-style-image: url("chrome://browser/skin/bookmarks-toolbar.svg");
}

#bookmarks-menu-button {
  list-style-image: url("chrome://browser/skin/bookmark-star-on-tray.svg");
}

#history-panelmenu {
  list-style-image: url("chrome://browser/skin/history.svg");
}

#downloads-button {
  list-style-image: url("chrome://browser/skin/downloads/download-icons.svg#arrow-with-bar");
}

#add-ons-button {
  list-style-image: url("chrome://mozapps/skin/extensions/extensionGeneric-16.svg");
}

#open-file-button {
  list-style-image: url("chrome://browser/skin/open.svg");
}

#save-page-button {
  list-style-image: url("chrome://browser/skin/save.svg");
}

#sync-button {
  list-style-image: url("chrome://browser/skin/tab.svg");
}

#characterencoding-button {
  list-style-image: url("chrome://browser/skin/characterEncoding.svg");
}

#new-window-button {
  list-style-image: url("chrome://browser/skin/new-window.svg");
}

#new-tab-button {
  list-style-image: url("chrome://browser/skin/new-tab.svg");
}

#privatebrowsing-button {
  list-style-image: url("chrome://browser/skin/privateBrowsing.svg");
}

#find-button {
  list-style-image: url("chrome://browser/skin/search-glass.svg");
}

#print-button {
  list-style-image: url("chrome://browser/skin/print.svg");
}

#fullscreen-button {
  list-style-image: url("chrome://browser/skin/fullscreen.svg");
}

#developer-button {
  list-style-image: url("chrome://browser/skin/developer.svg");
}

#profiler-button {
  list-style-image: url("chrome://devtools/skin/images/profiler-stopwatch.svg");
}

#PanelUI-profilerIframe {
  width: 450px;
}

#preferences-button {
  list-style-image: url("chrome://browser/skin/settings.svg");
}

#PanelUI-menu-button {
  list-style-image: url("chrome://browser/skin/menu.svg");
}

#PanelUI-menu-button[badge-status="update-available"],
#PanelUI-menu-button[badge-status="update-manual"],
#PanelUI-menu-button[badge-status="update-restart"] {
  list-style-image: url("chrome://browser/skin/menu-badged.svg");
}

#cut-button {
  list-style-image: url("chrome://browser/skin/edit-cut.svg");
}

#copy-button {
  list-style-image: url("chrome://browser/skin/edit-copy.svg");
}

#paste-button {
  list-style-image: url("chrome://browser/skin/edit-paste.svg");
}

#zoom-out-button {
  list-style-image: url("chrome://browser/skin/zoom-out.svg");
}

#zoom-in-button {
  list-style-image: url("chrome://browser/skin/zoom-in.svg");
}

#PlacesChevron,
#nav-bar-overflow-button {
  list-style-image: url("chrome://browser/skin/chevron.svg");
}

#nav-bar-overflow-button[animate] > .toolbarbutton-icon {
  fill: transparent;
}

@keyframes overflow-animation {
  from {
    transform: translateX(0);
  }
  50% {
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
  to {
    transform: translateX(-1260px);
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
}

@keyframes overflow-animation-rtl {
  from {
    transform: scaleX(-1) translateX(0);
  }
  50% {
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
  to {
    transform: scaleX(-1) translateX(-1260px);
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
}

/* The animation is supposed to show the blue fill color for 520ms, then the
   fade to the toolbarbutton-fill color for the remaining 210ms. Thus with an
   animation-duration of 730ms, 71% is the point where we start the fade out. */
@keyframes overflow-fade {
  from {
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
  71% {
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
  to {
    fill: inherit;
  }
}

#nav-bar-overflow-button > .toolbarbutton-animatable-box {
  top: calc(50% - 18px); /* Vertically center the 36px tall animatable image */
  /* Since .toolbarbutton-icon uses a different width than the animatable box,
     we need to set a padding relative to the difference in widths. */
  margin-inline-start: calc((16px + 2 * var(--toolbarbutton-inner-padding) - 18px) / 2);
  width: 18px; /* Width of each frame within the SVG sprite */
  height: 36px; /* Height of each frame within the SVG sprite */
}

#nav-bar-overflow-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  min-height: 36px; /* Minimum height must be equal to the height of the SVG sprite */
}

#nav-bar-overflow-button[animate] > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: overflow-animation;
  animation-timing-function: steps(70);
  animation-duration: 1167ms;
  background-image: url("chrome://browser/skin/chevron-animation.svg");
  width: 1278px;
}

#nav-bar-overflow-button[animate]:-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: overflow-animation-rtl;
}

#nav-bar-overflow-button[animate][fade] > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: overflow-fade;
  animation-timing-function: ease-out;
  animation-duration: 730ms;
}

#nav-bar-overflow-button[animate][fade]:-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  transform: scaleX(-1);
}

#email-link-button {
  list-style-image: url("chrome://browser/skin/mail.svg");
}

#sidebar-button {
  list-style-image: url("chrome://browser/skin/sidebars-right.svg");
}

#sidebar-button:-moz-locale-dir(ltr):not([positionend]),
#sidebar-button:-moz-locale-dir(rtl)[positionend] {
  list-style-image: url("chrome://browser/skin/sidebars.svg");
}

#panic-button {
  list-style-image: url("chrome://browser/skin/forget.svg");
}

#panic-button[open] {
  fill: rgb(213, 32, 20);
}

#library-button {
  list-style-image: url("chrome://browser/skin/library.svg");
}

@keyframes library-bookmark-animation {
  from {
    transform: translateX(0);
    fill: inherit;
  }
  25% {
    fill: inherit;
  }
  50% {
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
  to {
    transform: translateX(-1056px);
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
}

@keyframes library-bookmark-animation-rtl {
  from {
    transform: translateX(1056px);
    fill: inherit;
  }
  25% {
    fill: inherit;
  }
  50% {
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
  to {
    transform: translateX(0);
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
}

@keyframes library-bookmark-fade {
  from {
    fill: var(--toolbarbutton-icon-fill-attention);
    fill-opacity: 1;
  }
  to {
    fill: inherit;
  }
}

#library-button[animate] > .toolbarbutton-icon {
  fill: transparent;
}

#library-animatable-box[animate] {
  /* Position the sprite at the y-position of the library-button, then adjust
     based on the size difference between half of the button height and half
     of the sprite height. */
  top: calc(var(--library-button-height) / 2 - 27px);
  /* Set a margin relative to the difference in widths of the .toolbarbutton-icon
     and the .toolbar-animatable-box. This is correct even in RTL because the item
     is positioned using `left`. */
  left: calc(var(--library-icon-x) + (16px + 2 * var(--toolbarbutton-inner-padding) - 22px) / 2);
  width: 22px; /* Width of each frame within the SVG sprite */
  height: 54px; /* Height of each frame within the SVG sprite */
}

#library-animatable-box[animate] > .toolbarbutton-animatable-image {
  min-height: 54px; /* Minimum height must be equal to the height of the SVG sprite */
  width: 1078px;
  animation-duration: 800ms;
  animation-timing-function: steps(48);
}

#library-animatable-box[animate][fade] > .toolbarbutton-animatable-image {
  animation-duration: 2s;
  animation-timing-function: ease-out;
}

#library-animatable-box[animate="bookmark"] > .toolbarbutton-animatable-image {
  background-image: url("chrome://browser/skin/library-bookmark-animation.svg");
  animation-name: library-bookmark-animation;
  -moz-context-properties: fill, fill-opacity, stroke;
  stroke: var(--toolbarbutton-icon-fill-attention);
}

#library-animatable-box[animate="bookmark"]:-moz-locale-dir(rtl) > .toolbarbutton-animatable-image {
  animation-name: library-bookmark-animation-rtl;
}

#library-animatable-box[animate="bookmark"][fade] > .toolbarbutton-animatable-image {
  animation-name: library-bookmark-fade;
}

@keyframes library-pocket-animation {
  from {
    transform: translateX(0);
    fill: inherit;
  }
  25% {
    fill: inherit;
  }
  50% {
    fill: #ef4056;
  }
  to {
    transform: translateX(-1056px);
    fill: #ef4056;
  }
}

@keyframes library-pocket-animation-rtl {
  from {
    transform: translateX(1056px);
    fill: inherit;
  }
  25% {
    fill: inherit;
  }
  50% {
    fill: #ef4056;
  }
  to {
    transform: translateX(0);
    fill: #ef4056;
  }
}

/* We need to use an animation here instead of a transition
   to guarantee that the animation succeeds. With transitions
   if the starting value is already equal to the end value
   then no transition will occur and thus no transitionend event. */
@keyframes library-pocket-fade {
  from {
    fill: #ef4056;
  }
  to {
    fill: inherit;
  }
}

#library-animatable-box[animate="pocket"] > .toolbarbutton-animatable-image {
  background-image: url("chrome://browser/skin/library-pocket-animation.svg");
  animation-name: library-pocket-animation;
}

#library-animatable-box[animate="pocket"]:-moz-locale-dir(rtl) > .toolbarbutton-animatable-image {
  animation-name: library-pocket-animation-rtl;
}

#library-animatable-box[animate="pocket"][fade] > .toolbarbutton-animatable-image {
  animation-name: library-pocket-fade;
}

/* ----- BOOKMARK BUTTONS ----- */

.bookmark-item {
  list-style-image: url("chrome://mozapps/skin/places/defaultFavicon.svg");
  -moz-context-properties: fill;
  fill: currentColor;
}

toolbarbutton.bookmark-item {
  -moz-context-properties: fill, fill-opacity;
  fill: var(--lwt-toolbarbutton-icon-fill, currentColor);
  fill-opacity: var(--toolbarbutton-icon-fill-opacity);
}

.bookmark-item[container] {
  list-style-image: url("chrome://browser/skin/places/folder.svg");
}

.bookmark-item[container][query] {
  list-style-image: url("chrome://browser/skin/places/folder-smart.svg");
}

.bookmark-item[query][tagContainer] {
  list-style-image: url("chrome://browser/skin/places/tag.svg");
  -moz-image-region: auto;
}

.bookmark-item[query][dayContainer] {
  list-style-image: url("chrome://browser/skin/places/history.svg");
  -moz-image-region: auto;
}

.bookmark-item[query][hostContainer] {
  list-style-image: url("chrome://browser/skin/places/folder.svg");
}

#whats-new-menu-button {
  list-style-image: url("chrome://browser/skin/whatsnew.svg");
}
/* Menu panel and palette styles */

#appMenu-new-window-button {
  list-style-image: url(chrome://browser/skin/new-window.svg);
}

#appMenu-private-window-button {
  list-style-image: url(chrome://browser/skin/privateBrowsing.svg);
}

#appMenu-print-button {
  list-style-image: url(chrome://browser/skin/print.svg);
}

#appMenu-library-button {
  list-style-image: url(chrome://browser/skin/library.svg);
}

#appMenu-logins-button,
#PanelUI-fxa-menu-logins-button {
  list-style-image: url(chrome://browser/skin/login.svg);
}

#appMenu-addons-button {
  list-style-image: url(chrome://mozapps/skin/extensions/extensionGeneric-16.svg);
}

#PanelUI-fxa-menu-sync-prefs-button,
#appMenu-preferences-button {
  list-style-image: url(chrome://browser/skin/settings.svg);
}

#appMenu-customize-button {
  list-style-image: url(chrome://browser/skin/customize.svg);
}

#appMenu-find-button,
#panelMenu_searchBookmarks {
  list-style-image: url(chrome://browser/skin/search-glass.svg);
}

#appMenu-taskmanager-button {
  list-style-image: url(chrome://global/skin/icons/performance.svg);
}

#appMenu-whatsnew-button {
  list-style-image: url(chrome://browser/skin/whatsnew.svg);
}

#appMenu-help-button {
  list-style-image: url(chrome://global/skin/icons/help.svg);
}

#appMenu-cut-button {
  list-style-image: url(chrome://browser/skin/edit-cut.svg);
}

#appMenu-copy-button {
  list-style-image: url(chrome://browser/skin/edit-copy.svg);
}

#appMenu-paste-button {
  list-style-image: url(chrome://browser/skin/edit-paste.svg);
}

#appMenu-quit-button {
  list-style-image: url(chrome://browser/skin/quit.svg);
}

#appMenu-zoomEnlarge-button {
  list-style-image: url(chrome://browser/skin/zoom-in.svg);
}

#appMenu-zoomReduce-button {
  list-style-image: url(chrome://browser/skin/zoom-out.svg);
}

#appMenu-fullscreen-button {
  list-style-image: url(chrome://browser/skin/fullscreen.svg);
}

#appMenu-fullscreen-button[checked] {
  list-style-image: url(chrome://browser/skin/fullscreen-exit.svg);
}

#appMenu-library-pocket-button {
  list-style-image: url("chrome://browser/skin/pocket.svg");
}

#appMenu-library-history-button {
  list-style-image: url(chrome://browser/skin/history.svg);
}

#PanelUI-fxa-menu-remotetabs-button,
#appMenuRecentlyClosedTabs,
#appMenu-library-remotetabs-button {
  list-style-image: url("chrome://browser/skin/tab.svg");
}

#PanelUI-fxa-menu-syncnow-button,
#PanelUI-remotetabs-syncnow {
  list-style-image: url("chrome://browser/skin/sync.svg");
}

#PanelUI-fxa-menu-view-managedevices
#PanelUI-remotetabs-view-managedevices {
  list-style-image: url("chrome://browser/skin/device-phone.svg");
}

#PanelUI-fxa-menu-view-sidebar,
#appMenuViewHistorySidebar,
#PanelUI-remotetabs-view-sidebar,
#panelMenu_viewBookmarksSidebar {
  list-style-image: url("chrome://browser/skin/sidebars-right.svg");
}

#PanelUI-fxa-menu-view-sidebar:-moz-locale-dir(ltr):not([positionend]),
#PanelUI-fxa-menu-view-sidebar:-moz-locale-dir(rtl)[positionend],
#appMenuViewHistorySidebar:-moz-locale-dir(ltr):not([positionend]),
#appMenuViewHistorySidebar:-moz-locale-dir(rtl)[positionend],
#PanelUI-remotetabs-view-sidebar:-moz-locale-dir(ltr):not([positionend]),
#PanelUI-remotetabs-view-sidebar:-moz-locale-dir(rtl)[positionend],
#panelMenu_viewBookmarksSidebar:-moz-locale-dir(ltr):not([positionend]),
#panelMenu_viewBookmarksSidebar:-moz-locale-dir(rtl)[positionend] {
  list-style-image: url("chrome://browser/skin/sidebars.svg");
}

#panelMenu_bookmarkingTools {
  list-style-image: url("chrome://browser/skin/developer.svg");
}

#panelMenu_viewBookmarksToolbar {
  list-style-image: url("chrome://browser/skin/bookmarks-toolbar.svg");
}

#panelMenuBookmarkThisPage {
  list-style-image: url("chrome://browser/skin/bookmark-hollow.svg");
}

#appMenu-library-bookmarks-button,
#panelMenuBookmarkThisPage[starred] {
  list-style-image: url("chrome://browser/skin/bookmark.svg");
}

#bookmarks-menu-button[cui-areatype="menu-panel"],
toolbarpaletteitem[place="palette"] > #bookmarks-menu-button,
#panelMenu_toggleBookmarksMenu {
  list-style-image: url("chrome://browser/skin/bookmark-star-on-tray.svg");
}

#appMenuClearRecentHistory {
  list-style-image: url("chrome://browser/skin/forget.svg");
}

#appMenuRestoreLastSession {
  list-style-image: url("chrome://browser/skin/restore-session.svg");
}

#appMenuRecentlyClosedWindows {
  list-style-image: url(chrome://browser/skin/window.svg);
}

#appMenu-library-downloads-button {
  list-style-image: url("chrome://browser/skin/downloads/download-icons.svg#arrow-with-bar");
}

#appMenu-library-downloads-show-button {
  list-style-image: url("chrome://browser/skin/folder.svg");
}

/* Fullscreen window controls */

#minimize-button,
#restore-button,
#close-button {
  -moz-appearance: none;
  padding: 6px 12px;
  -moz-context-properties: stroke;
  stroke: currentColor;
  color: inherit;
}

#minimize-button {
  list-style-image: url(chrome://browser/skin/window-controls/minimize.svg);
}

#restore-button {
  list-style-image: url(chrome://browser/skin/window-controls/restore.svg);
}

#minimize-button:hover,
#restore-button:hover {
  background-color: hsla(0,0%,0%,.12);
}

#minimize-button:hover:active,
#restore-button:hover:active {
  background-color: hsla(0,0%,0%,.22);
}

#TabsToolbar[brighttext] > #window-controls > #minimize-button:hover,
#TabsToolbar[brighttext] > #window-controls > #restore-button:hover {
  background-color: hsla(0,0%,100%,.12);
}

#TabsToolbar[brighttext] > #window-controls > #minimize-button:hover:active,
#TabsToolbar[brighttext] > #window-controls > #restore-button:hover:active {
  background-color: hsla(0,0%,100%,.22);
}

#close-button {
  list-style-image: url(chrome://browser/skin/window-controls/close.svg);
}

#close-button:hover {
  background-color: #d70022;
  stroke: white;
}

#close-button:hover:active {
  background-color: #ff0039;
}

/* Location bar */



:root {
  --toolbar-field-focus-border-color: Highlight;

  /* 28x28 box - 16x16 image = 12x12 padding, 6 on each side */
  --urlbar-icon-padding: 6px;
}

:root[uidensity=compact] {
  /* 24x24 box - 16x16 image = 8x8 padding, 4 on each side */
  --urlbar-icon-padding: 4px;
}

:root[uidensity=touch] {
  /* 30x30 box - 16x16 image = 14x14 padding, 7 on each side */
  --urlbar-icon-padding: 7px;
}

#urlbar-container,
#search-container {
  padding-block: 3px;
  margin-inline: 5px;
}

#urlbar,
#searchbar {
  background-color: -moz-Field;
  color: -moz-FieldText;
  background-clip: padding-box;
  border: 1px solid hsla(240,5%,5%,.25);
  border-radius: var(--toolbarbutton-border-radius);
  box-shadow: 0 1px 4px rgba(0,0,0,.05);
  min-height: 30px;
  overflow: -moz-hidden-unscrollable;
  text-shadow: none;
}

.searchbar-textbox {
  -moz-appearance: none;
  background: none;
  color: inherit;
  margin: 0;
}

#urlbar:hover,
#searchbar:hover {
  border-color: hsla(240,5%,5%,.35);
  box-shadow: 0 1px 6px rgba(0,0,0,.1);
}

#urlbar:-moz-lwtheme,
#navigator-toolbox #searchbar:-moz-lwtheme {
  background-color: var(--lwt-toolbar-field-background-color, hsla(0,0%,100%,.8));
  color: var(--lwt-toolbar-field-color, black);
}

#urlbar:not([focused="true"]):-moz-lwtheme,
#urlbar.hidden-focus:-moz-lwtheme,
#navigator-toolbox #searchbar:not(:focus-within):-moz-lwtheme {
  border-color: var(--lwt-toolbar-field-border-color, hsla(240,5%,5%,.25));
}

#urlbar:not([focused="true"]):-moz-lwtheme:hover,
#urlbar.hidden-focus:-moz-lwtheme:hover,
#navigator-toolbox #searchbar:not(:focus-within):-moz-lwtheme:hover {
  border-color: var(--lwt-toolbar-field-border-color, hsla(240,5%,5%,.35));
}

#urlbar:-moz-lwtheme:hover,
#navigator-toolbox #searchbar:-moz-lwtheme:hover {
  background-color: var(--lwt-toolbar-field-background-color, white);
}

#urlbar:not(.hidden-focus)[focused="true"],
#searchbar:focus-within {
  border-color: var(--toolbar-field-focus-border-color);
}

#urlbar-container[breakout] {
  position: relative;
  min-height: var(--urlbar-container-height);
}

#urlbar[breakout] {
  position: absolute;
  width: 100%;
  height: var(--urlbar-height);
  top: calc((var(--urlbar-toolbar-height) - var(--urlbar-height)) / 2);
  left: 0;
  transition-property: left, width;
}

#urlbar[breakout] > #urlbar-input-container {
  width: 100%;
  height: 100%;
  transition-property: width, padding-inline;
}

:root[sessionrestored] #urlbar[breakout],
:root[sessionrestored] #urlbar[breakout] > #urlbar-input-container {
  transition-duration: 250ms;
  transition-timing-function: var(--animation-easing-function);
}

#urlbar[breakout][breakout-extend] {
  /* The z-index needs to be big enough to trump other positioned UI pieces
     that we want to overlay. 3 is used in the tab bar. */
  z-index: 3;
  top: -4px;
  left: -55px;
  width: calc(100% + 2 * 55px);
  height: auto;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
}

#urlbar[breakout][breakout-extend] > #urlbar-input-container {
  height: calc(var(--urlbar-toolbar-height) + 2 * 4px - 2px /* urlbar border */);
  padding-block: calc(4px + (var(--urlbar-toolbar-height) - var(--urlbar-height)) / 2);
  padding-inline: 55px;
}

#urlbar:not(.hidden-focus):-moz-lwtheme[focused="true"],
#navigator-toolbox #searchbar:focus-within:-moz-lwtheme {
  background-color: var(--lwt-toolbar-field-focus, var(--lwt-toolbar-field-background-color, white));
  color: var(--lwt-toolbar-field-focus-color, var(--lwt-toolbar-field-color, black));
}

:root[lwt-selection] #urlbar-input:-moz-lwtheme::selection,
:root[lwt-selection] .searchbar-textbox:-moz-lwtheme::selection {
  background-color: var(--lwt-toolbar-field-highlight, Highlight);
  color: var(--lwt-toolbar-field-highlight-text, HighlightText);
}

:root[uidensity=compact] #urlbar,
:root[uidensity=compact] #searchbar {
  min-height: 26px;
}

:root[uidensity=touch] #urlbar,
:root[uidensity=touch] #searchbar {
  min-height: 32px;
}

:root[chromehidden~="toolbar"] #urlbar-container {
  /* Remove excess space between the address bar and the menu button in popups. */
  padding-inline-end: 0;
}

:root[customizing] .urlbar-input-box {
  visibility: hidden;
}

#urlbar-input,
#urlbar-scheme {
  -moz-box-flex: 1;
  background-color: transparent;
  color: inherit;
  border: none;
  padding: 0;
}

#urlbar-container {
  -moz-box-align: center;
}

#urlbar-search-splitter {
  /* The splitter width should equal the location and search bars' combined
     neighboring margin and border width. */
  min-width: 12px;
  margin: 0 -6px;
  position: relative;
  border: none;
  background: transparent;
  -moz-appearance: none;
}

/* Page action panel */
.pageAction-panel-button > .toolbarbutton-icon {
  width: 16px;
  height: 16px;
}

#pageAction-panel-bookmark,
#star-button {
  list-style-image: url("chrome://browser/skin/bookmark-hollow.svg");
}
#pageAction-panel-bookmark[starred],
#star-button[starred] {
  list-style-image: url("chrome://browser/skin/bookmark.svg");
}
#star-button[starred] {
  fill-opacity: 1;
  fill: var(--toolbarbutton-icon-fill-attention);
}

#pocket-button,
#pageAction-panel-pocket {
  list-style-image: url("chrome://browser/skin/pocket-outline.svg");
}

#pocket-button-box[open="true"] > #pocket-button,
#pocket-button-box[pocketed="true"] > #pocket-button {
  list-style-image: url("chrome://browser/skin/pocket.svg");
}

#pocket-button-box[animate="true"] > #pocket-button,
#pocket-button[open="true"][animationsenabled] > .toolbarbutton-icon {
  fill: transparent;
}

#pocket-button-box[open="true"] > #pocket-button,
#pocket-button-box[pocketed="true"] > #pocket-button {
  fill: #ef4056;
  fill-opacity: 1;
}

#pageAction-panel-pinTab,
#pageAction-urlbar-pinTab {
  list-style-image: url("chrome://browser/skin/pin-tab.svg");
}

#pageAction-panel-pinTab[pinned],
#pageAction-urlbar-pinTab[pinned] {
  list-style-image: url("chrome://browser/skin/unpin-tab.svg");
}

#pageAction-panel-copyURL,
#pageAction-urlbar-copyURL {
  list-style-image: url("chrome://browser/skin/link.svg");
}

#pageAction-panel-emailLink,
#pageAction-urlbar-emailLink {
  list-style-image: url("chrome://browser/skin/mail.svg");
}

#pageAction-panel-sendToDevice,
#pageAction-urlbar-sendToDevice {
  list-style-image: url("chrome://browser/skin/send-to-device.svg");
}

#pageAction-panel-pinTab:-moz-locale-dir(rtl) > .toolbarbutton-icon,
#pageAction-urlbar-pinTab:-moz-locale-dir(rtl),
#pageAction-panel-sendToDevice:-moz-locale-dir(rtl) > .toolbarbutton-icon,
#pageAction-urlbar-sendToDevice:-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}

.pageAction-sendToDevice-device[clientType=phone] {
  list-style-image: url("chrome://browser/skin/device-phone.svg");
}

.pageAction-sendToDevice-device[clientType=tablet] {
  list-style-image: url("chrome://browser/skin/device-tablet.svg");
}

.pageAction-sendToDevice-device[clientType=desktop] {
  list-style-image: url("chrome://browser/skin/device-desktop.svg");
}

.pageAction-sendToDevice-device[clientType=tv] {
  list-style-image: url("chrome://browser/skin/device-tv.svg");
}

.pageAction-sendToDevice-device[clientType=vr] {
  list-style-image: url("chrome://browser/skin/device-vr.svg");
}

.pageAction-sendToDevice-device.signintosync,
#pageAction-panel-sendToDevice-fxa,
#pageAction-urlbar-sendToDevice-fxa {
  list-style-image: url("chrome://browser/skin/sync.svg");
}

#pageAction-panel-addSearchEngine > .toolbarbutton-badge-stack > .toolbarbutton-icon {
  width: 16px;
  height: 16px;
}
#pageAction-panel-addSearchEngine > .toolbarbutton-badge-stack > .toolbarbutton-badge {
  display: -moz-box;
  background: url(chrome://browser/skin/search-indicator-badge-add.svg) no-repeat center;
  box-shadow: none;
  /* "!important" is necessary to override the rule in toolbarbutton.css */
  margin: -4px 0 0 !important;
  margin-inline-end: -4px !important;
  width: 11px;
  height: 11px;
  min-width: 11px;
  min-height: 11px;
}

#pageActionActivatedActionPanel[actionID="pocket"] {
  --arrowpanel-background: #fbfbfb;
}

/* URL bar and page action buttons */

#page-action-buttons {
  -moz-box-align: center;
}

#pageActionSeparator {
  /* This draws the separator the same way that #urlbar-label-box draws its
     left and right borders, which end up looking like separators.  It might not
     be the best way in this case, but it makes sure that all these vertical
     lines in the urlbar look the same: same height, vertical position, etc. */
  border-inline-start: 1px solid var(--urlbar-separator-color);
  border-image: linear-gradient(transparent 15%, var(--urlbar-separator-color) 15%, var(--urlbar-separator-color) 85%, transparent 85%);
  border-image-slice: 1;
  width: 1px;
  height: 28px;
  visibility: hidden;
}

:root[uidensity=compact] #pageActionSeparator {
  height: 24px;
}

:root[uidensity=touch] #pageActionSeparator {
  height: 30px;
}

#page-action-buttons > :not([hidden]):not(toolbartabstop) ~ #pageActionSeparator {
  /* Show the separator between the page actions and other elements when at
     least one of the latter is shown. */
  visibility: visible;
  margin-left: 6px;
  margin-right: 6px;
}

#userContext-icons,
#urlbar-zoom-button {
  margin-left: 6px;
  margin-right: 6px;
}

.urlbar-icon {
  width: 28px;
  height: 28px;
  padding: var(--urlbar-icon-padding);
  -moz-context-properties: fill, fill-opacity;
  fill: currentColor;
  fill-opacity: 0.6;
  color: inherit;
}

.urlbar-page-action[disabled] {
  fill-opacity: 0.3;
}

:root[uidensity=compact] .urlbar-icon {
  width: 24px;
  height: 24px;
}

:root[uidensity=touch] .urlbar-icon {
  width: 30px;
  height: 30px;
}

:not(.urlbar-icon-wrapper) > .urlbar-icon:not([disabled]):hover,
.urlbar-icon-wrapper:not([disabled]):hover {
  background-color: hsla(0,0%,70%,.2);
}

:not(.urlbar-icon-wrapper) > .urlbar-icon:not([disabled])[open],
:not(.urlbar-icon-wrapper) > .urlbar-icon:not([disabled]):hover:active,
.urlbar-icon-wrapper:not([disabled])[open],
.urlbar-icon-wrapper:not([disabled]):hover:active {
  background-color: hsla(0,0%,70%,.3);
}

.urlbar-icon:-moz-focusring,
.urlbar-icon-wrapper:-moz-focusring {
  outline: var(--toolbarbutton-focus-outline);
  outline-offset: -2px;
  -moz-outline-radius: var(--toolbarbutton-border-radius);
}

#urlbar-go-button,
.search-go-button {
  list-style-image: url("chrome://browser/skin/forward.svg");
}

#urlbar-go-button:-moz-locale-dir(rtl),
.search-go-button:-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}

.urlbar-history-dropmarker {
  list-style-image: url(chrome://global/skin/icons/arrow-dropdown-16.svg);
  transition: opacity 0.15s ease;
}

#urlbar[switchingtabs] > #urlbar-input-container > .urlbar-history-dropmarker {
  transition: none;
}

#nav-bar:not([customizing="true"]) > #nav-bar-customization-target > #urlbar-container:not(:hover) > #urlbar:not([focused]) > #urlbar-input-container > .urlbar-history-dropmarker,
#nav-bar:not([customizing="true"]) > #nav-bar-customization-target > #urlbar-container:not(:hover) > #urlbar.hidden-focus > #urlbar-input-container > .urlbar-history-dropmarker {
  opacity: 0;
}

#pageActionButton,
.share-more-button {
  list-style-image: url("chrome://global/skin/icons/more.svg");
}

@keyframes bookmark-animation {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-627px);
  }
}

@keyframes bookmark-animation-rtl {
  from {
    transform: scaleX(-1) translateX(0);
  }
  to {
    transform: scaleX(-1) translateX(-627px);
  }
}

#star-button-box[animationsenabled] {
  position: relative;
}

/* Preload the bookmark animations to prevent a flicker during the first playing
   of the animations. */
#star-button[preloadanimations] + #star-button-animatable-box > #star-button-animatable-image {
  background-image: url("chrome://browser/skin/bookmark-animation.svg"),
                    url("chrome://browser/skin/library-bookmark-animation.svg");
  background-size: 0, 0;
}

#star-button-box[animationsenabled] > #star-button[starred][animate] {
  fill: transparent;
  position: relative;
}

#star-button-box[animationsenabled] > #star-button[starred][animate] + #star-button-animatable-box {
  position: absolute;
  overflow: hidden;
  top: calc(50% - 16.5px); /* 16.5px is half the height of the sprite */
  /* .urlbar-icon has width 28px. Each frame is 33px wide. Set margin-inline-start
     to be half the difference, -2.5px. */
  margin-inline-start: -2.5px;
  width: 33px; /* Width of each frame within the SVG sprite */
  height: 33px; /* Height of each frame within the SVG sprite */
}

:root[uidensity=compact] #star-button-box[animationsenabled] > #star-button[starred][animate] + #star-button-animatable-box {
  /* .urlbar-icon has width 24px in this case */
  margin-inline-start: -4.5px;
}

:root[uidensity=touch] #star-button-box[animationsenabled] > #star-button[starred][animate] + #star-button-animatable-box {
  /* .urlbar-icon has width 30px in this case */
  margin-inline-start: -1.5px;
}

#star-button-box[animationsenabled] > #star-button[starred][animate] + #star-button-animatable-box > #star-button-animatable-image {
  background-image: url("chrome://browser/skin/bookmark-animation.svg");
  background-size: auto;
  list-style-image: none;
  height: var(--toolbarbutton-height);
  min-height: 33px; /* Minimum height must be equal to the height of the SVG sprite */
  animation-name: bookmark-animation;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-timing-function: steps(19);
  animation-duration: 317ms;
  width: 660px;
  -moz-context-properties: fill, stroke;
  stroke: var(--toolbarbutton-icon-fill-attention);
}

#star-button-box[animationsenabled] > #star-button[starred][animate]:-moz-locale-dir(rtl) + #star-button-animatable-box > #star-button-animatable-image {
  animation-name: bookmark-animation-rtl;
}

@keyframes pocket-animation {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-240px);
  }
}

@keyframes pocket-animation-rtl {
  from {
    transform: scaleX(-1) translateX(0);
  }
  to {
    transform: scaleX(-1) translateX(-240px);
  }
}

#pocket-button-box[animate="true"] > #pocket-animatable-box,
#pocket-button > .toolbarbutton-animatable-box {
  top: calc(50% - 8px); /* 8px is half the height of the sprite */
  /* Since .toolbarbutton-icon uses a different width than the animatable box,
     we need to set a padding relative to the difference in widths. */
  margin-inline-start: calc((16px + 2 * var(--toolbarbutton-inner-padding) - 20px) / 2);
  width: 20px; /* Width of each frame within the SVG sprite */
  height: 16px; /* Height of each frame within the SVG sprite */
}

#pocket-button-box[animate="true"] > #pocket-animatable-box {
  position: absolute;
  overflow: hidden;
  /* .urlbar-icon has width 28px. Each frame is 20px wide. Set margin-inline-start
     to be half the difference, 4px. */
  margin-inline-start: 4px;
}

:root[uidensity=compact] #pocket-button-box[animate="true"] > #pocket-animatable-box {
  /* .urlbar-icon has width 24px in this case */
  margin-inline-start: 2px;
}

:root[uidensity=touch] #pocket-button-box[animate="true"] > #pocket-animatable-box {
  /* .urlbar-icon has width 30px in this case */
  margin-inline-start: 5px;
}

#pocket-button-box[animate="true"] > #pocket-animatable-box > #pocket-animatable-image,
#pocket-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  height: var(--toolbarbutton-height); /* Height must be equal to height of toolbarbutton padding-box */
}

#pocket-button-box[animate="true"],
#pocket-button[open="true"][animationsenabled][cui-areatype="toolbar"]:not([overflowedItem="true"]) {
  position: relative;
}

#pocket-button-box:not([animate="true"]):not(:hover) > #pocket-animatable-box {
  display: none;
}

/* Preload pocket-animation.svg and library-pocket-animation.svg to prevent
   a flicker at the start of either animation. The preloading of the library
   animation is triggered off of hovering the pocket button since the pocket
   button always animates before the library button. */
#pocket-button-box:not([animate="true"]):hover > #pocket-animatable-box > #pocket-animatable-image,
#pocket-button[animationsenabled][cui-areatype="toolbar"]:not([overflowedItem="true"]):not([open="true"]):hover > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  background-image: url("chrome://browser/skin/pocket-animation.svg"),
                    url("chrome://browser/skin/library-pocket-animation.svg");
  background-size: 0, 0;
}

#pocket-button-box[animate="true"] > #pocket-animatable-box > #pocket-animatable-image,
#pocket-button[open="true"][animationsenabled][cui-areatype="toolbar"]:not([overflowedItem="true"]) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: pocket-animation;
  animation-timing-function: steps(12);
  animation-duration: 200ms;
  background-image: url("chrome://browser/skin/pocket-animation.svg");
  fill: #ef4056;
  -moz-context-properties: fill;
  width: 260px;
}

#pocket-button-box[animate="true"]:-moz-locale-dir(rtl) > #pocket-animatable-box > #pocket-animatable-image,
#pocket-button[open="true"][animationsenabled][cui-areatype="toolbar"]:not([overflowedItem="true"]):-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
  animation-name: pocket-animation-rtl;
}


/**
 * Contextual Feature Recommendation
 *
 * Animate the recommendation icon to expand outwards and display a text label.
 * Fake the effect of a smoothly expanding width without animating any widths
 * by (continuously) animating only `mask-position-x` and `transform`.
 *
 * In a few places, transition a property using the timing-function `step-start`
 * while collapsed and `step-end` while expanded in order to (discretely) modify
 * the value while expanded and while transitioning in either direction.
 *
 * This UI is part of an experiment launching in LTR locales only. Fixing the
 * RTL issues is tracked by Bug 1485725.
 */

:root {
  --cfr-animation-duration: 0.35s;
  --cfr-button-addons-icon: url(resource://activity-stream/data/content/assets/glyph-webextension-16.svg);
  --cfr-button-features-icon: url(resource://activity-stream/data/content/assets/glyph-cfr-feature-16.svg);
  --cfr-active-color: #0060df;
}

#contextual-feature-recommendation {
  width: 28px;
  margin-inline-start: 0;
  transition: margin-inline-start step-end var(--cfr-animation-duration);
}
#urlbar[cfr-recommendation-state="expanded"] #contextual-feature-recommendation {
  margin-inline-start: calc(var(--cfr-label-width) * -1);
  transition: margin-inline-start step-start var(--cfr-animation-duration);
}

#cfr-button {
  margin: -2px 0;
  transition-property: fill, fill-opacity, transform;
  transition-timing-function: ease-in-out;
  transition-duration: var(--cfr-animation-duration);
}
#cfr-button[data-cfr-icon="webextensions-icon"] {
  list-style-image: var(--cfr-button-addons-icon);
}
#cfr-button[data-cfr-icon="recommendations-icon"] {
  list-style-image: var(--cfr-button-features-icon);
}
#urlbar[cfr-recommendation-state="expanded"] #cfr-button {
  fill: white;
  fill-opacity: 1;
  background-color: transparent; /* Override hover background-color */
  transform: translateX(calc(var(--cfr-label-width) * -1));
}
#urlbar[cfr-recommendation-state="expanded"] #cfr-button:-moz-locale-dir(rtl) {
  transform: translateX(calc(var(--cfr-label-width)));
}
@keyframes cfr-button-fade-through-active-color {
  33% {
    fill-opacity: 1;
    fill: var(--cfr-active-color);
  }
  67% {
    fill-opacity: 1;
    fill: var(--cfr-active-color);
  }
}
#urlbar[cfr-recommendation-state="collapsed"] #cfr-button {
  animation: cfr-button-fade-through-active-color calc(3 * var(--cfr-animation-duration));
}

#cfr-label-container {
  width: 0;
  overflow: hidden;
  border-radius: 5px;
  padding-inline-start: 28px;
  mask-image: linear-gradient(to right, transparent 0, black 0);
  mask-position-x: var(--cfr-label-width);
  mask-repeat: no-repeat;
  transition-property: background-color, mask-position-x, width, margin-inline-end;
  transition-timing-function: ease-in-out, ease-in-out, step-end, step-end;
  transition-duration: var(--cfr-animation-duration);
}
#cfr-label-container:-moz-locale-dir(rtl) {
  mask-position-x: calc(var(--cfr-label-width) * -1);
}

#urlbar[cfr-recommendation-state="expanded"] #cfr-label-container {
  width: calc(var(--cfr-label-width) + 28px);
  background-color: var(--cfr-active-color);
  margin-inline-end: -28px;
  mask-position-x: 0;
  transition-timing-function: ease-in-out, ease-in-out, step-start, step-start;
}

#cfr-label {
  margin: 0;
  padding: 3px 5px;
  padding-inline-start: 0;
  color: white;
  mask-image: linear-gradient(to right, transparent 0, black 0);
  mask-position-x: var(--cfr-label-width);
  mask-repeat: no-repeat;
  transition: mask-position-x ease-in-out var(--cfr-animation-duration);
}
#cfr-label:-moz-locale-dir(rtl) {
  mask-position-x: calc(var(--cfr-label-width) * -1);
}
#urlbar[cfr-recommendation-state="expanded"] #cfr-label {
  mask-position-x: 0;
}

/* Translate the dropmarker to give illusion of increasing width of the recommendation  */
#urlbar[cfr-recommendation-state] .urlbar-history-dropmarker {
  transition: transform ease-in-out var(--cfr-animation-duration);
}
#urlbar[cfr-recommendation-state="expanded"] .urlbar-history-dropmarker {
  transform: translateX(calc(var(--cfr-label-width) * -1));
}
#urlbar[cfr-recommendation-state="expanded"] .urlbar-history-dropmarker:-moz-locale-dir(rtl) {
  transform: translateX(calc(var(--cfr-label-width)));
}

/* Shift the url-bar text fading to stop the recommendation overlapping */
#urlbar[cfr-recommendation-state] #urlbar-input {
  /* A mask-image is usually only defined for the url bar when text overflows.
     We need to re-define the mask image here so that it shows up correctly when
     we transition to or from an `expanded` state (in which the right end of the
     url bar may be obscured without overflow). */
  mask-image: linear-gradient(to left, transparent, black 3ch);
  transition: mask-position-x ease-in-out var(--cfr-animation-duration);
}
#urlbar[cfr-recommendation-state] #urlbar-input:-moz-locale-dir(rtl) {
  mask-image: linear-gradient(to right, transparent, black 3ch);
}
#urlbar[cfr-recommendation-state="expanded"] #urlbar-input {
  mask-position-x: calc(var(--cfr-label-width) * -1);
}
#urlbar[cfr-recommendation-state="expanded"] #urlbar-input:-moz-locale-dir(rtl) {
  mask-position-x: calc(var(--cfr-label-width));
}

/* Reader mode icon */

#reader-mode-button {
  list-style-image: url(chrome://browser/skin/readerMode.svg);
}

#reader-mode-button[readeractive] {
  fill: var(--toolbarbutton-icon-fill-attention);
  fill-opacity: 1;
}

/* Zoom button */

#urlbar-zoom-button {
  -moz-appearance: none;
  color: inherit;
  font-size: .8em;
  padding: 0 8px;
  border-radius: 1em;
  background-color: hsla(0,0%,0%,.05);
  border: 1px solid hsla(210,4%,50%,.3);
}

@keyframes urlbar-zoom-reset-pulse {
  0% {
    transform: scale(0);
  }
  75% {
    transform: scale(1.5);
  }
  100% {
    transform: scale(1.0);
  }
}

#urlbar-zoom-button[animate="true"] {
  animation-name: urlbar-zoom-reset-pulse;
  animation-duration: 250ms;
}

#urlbar-zoom-button:hover {
  background-color: hsla(0,0%,0%,.1);
}

#urlbar-zoom-button:hover:active {
  background-color: hsla(0,0%,0%,.15);
}

:root[lwt-toolbar-field-brighttext] #urlbar-zoom-button:hover {
  background-color: rgba(255,255,255,.2);
}

:root[lwt-toolbar-field-brighttext] #urlbar-zoom-button:hover:active {
  background-color: rgba(255,255,255,.3);
}

#urlbar-zoom-button:-moz-focusring {
  outline: var(--toolbarbutton-focus-outline);
  outline-offset: unset;
  -moz-outline-radius: 1em;
}

#urlbar-zoom-button > .toolbarbutton-text {
  display: -moz-box;
}

#urlbar-zoom-button > .toolbarbutton-icon {
  display: none;
}

/* Search bar */

#search-container {
  min-width: calc(54px + 11ch);
}

.searchbar-search-button {
  -moz-box-align: center;
  fill: currentColor;
}

.searchbar-search-icon {
  list-style-image: url(chrome://browser/skin/search-glass.svg);
  -moz-context-properties: fill, fill-opacity;
  pointer-events: none;
  margin-inline-start: 8px;
  margin-inline-end: 6px;
  width: 16px;
  fill-opacity: .4;
}

.searchbar-search-button:hover > .searchbar-search-icon {
  fill-opacity: .6;
}

.searchbar-search-button:hover:active > .searchbar-search-icon {
  fill-opacity: .8;
}

.searchbar-search-icon-overlay {
  pointer-events: none;
}

.searchbar-search-button[addengines=true] > .searchbar-search-icon-overlay {
  list-style-image: url(chrome://browser/skin/search-indicator-badge-add.svg);
  margin-inline-start: -15px;
  margin-inline-end: 4px;
  margin-top: -10px;
  width: 11px;
  height: 11px;
}

.searchbar-search-button[addengines=true] > .searchbar-search-icon-overlay:-moz-locale-dir(rtl) {
  margin-inline-start: -25px;
  margin-inline-end: 14px;
}

.searchbar-search-button:hover:not([addengines=true]) > .searchbar-search-icon-overlay {
  list-style-image: url(chrome://global/skin/icons/arrow-dropdown-12.svg);
  -moz-context-properties: fill;
  margin-inline-start: -8px;
  margin-inline-end: 2px;
  width: 6px;
  height: 6px;
}

.searchbar-search-button:hover:not([addengines=true]) > .searchbar-search-icon-overlay:-moz-locale-dir(rtl) {
  margin-inline-start: -26px;
  margin-inline-end: 20px;
}

#urlbar.hidden-focus[focused="true"] {
  caret-color: transparent;
}

#urlbar:not(:-moz-lwtheme):not([focused="true"]),
#urlbar:not(:-moz-lwtheme).hidden-focus,
#searchbar:not(:-moz-lwtheme):not(:focus-within) {
  border-color: ThreeDShadow;
}

/* identity box */


#identity-box {
  padding-inline-start: 6px;
  padding-inline-end: 6px;
  margin-inline-end: 4px;
}

#identity-box,
#tracking-protection-icon-container {
  /* Set default fill for icons in the identity block.
     Individual icons can override this. */
  fill: currentColor;
  fill-opacity: .6;
}

/* The tracking protection icon will be hidden if it is a chrome page. There
   will be only the brand icon in the url bar. So, we need to change the padding
   start for proper positing the icon. */
#identity-box[pageproxystate="valid"].chromeUI {
  padding-inline-start: 8px;
}

#identity-box[pageproxystate="invalid"] > #permissions-granted-icon,
#identity-box[pageproxystate="invalid"] > #blocked-permissions-container,
#identity-box[pageproxystate="invalid"] > #notification-popup-box,
#identity-box[pageproxystate="invalid"] > #identity-icon-labels,
#identity-box[pageproxystate="invalid"] > #remote-control-icon {
  display: none;
}

#identity-box[pageproxystate="invalid"] {
  pointer-events: none;
  /* This would make the spaces around the glass icon balanced. */
  margin-inline-end: 2px;
  -moz-user-focus: ignore;
}

#identity-box:hover:not(.no-hover):not([open=true]),
#tracking-protection-icon-container:hover:not([open=true]) {
  background-color: hsla(0,0%,70%,.2);
  fill-opacity: .8;
}

#identity-box:hover:active:not(.no-hover),
#identity-box[open=true],
#tracking-protection-icon-container:hover:active,
#tracking-protection-icon-container[open=true] {
  background-color: hsla(0,0%,70%,.3);
  fill-opacity: .8;
}

#identity-box:not(:active):-moz-focusring,
#tracking-protection-icon-container:not(:active):-moz-focusring {
  outline: var(--toolbarbutton-focus-outline);
  outline-offset: -2px;
  -moz-outline-radius: var(--toolbarbutton-border-radius);
}

#identity-box[pageproxystate="valid"].verifiedIdentity > #identity-icon-labels {
  color: #058B00;
}

:root[lwt-toolbar-field-brighttext] #identity-box[pageproxystate="valid"].verifiedIdentity > #identity-icon-labels {
  color: #30e60b;
}

#identity-box[pageproxystate="valid"].chromeUI > #identity-icon-labels,
.urlbar-label {
  opacity: .6;
}

#identity-icon-labels:-moz-locale-dir(ltr) {
  padding-left: 4px;
}
#identity-icon-labels:-moz-locale-dir(rtl) {
  padding-right: 4px;
}
#identity-box:not(.chromeUI):not(.extensionPage):not(.notSecureText) {
  --urlbar-separator-color: transparent;
}
#identity-box[pageproxystate="valid"].verifiedIdentity {
  --urlbar-separator-color: rgba(18, 188, 0, .5);
}

#identity-box[pageproxystate="valid"].notSecureText,
#identity-box[pageproxystate="valid"].verifiedIdentity,
#identity-box[pageproxystate="valid"].chromeUI,
#identity-box[pageproxystate="valid"].extensionPage,
#urlbar-label-box {
  margin-inline-end: 8px;
  border-inline-end: 1px solid var(--urlbar-separator-color);
  border-image: linear-gradient(transparent 15%, var(--urlbar-separator-color) 15%, var(--urlbar-separator-color) 85%, transparent 85%);
  border-image-slice: 1;
}

#identity-box[pageproxystate="valid"].notSecureText,
#identity-box[pageproxystate="valid"].verifiedIdentity,
#identity-box[pageproxystate="valid"].chromeUI,
#identity-box[pageproxystate="valid"].extensionPage {
  padding-inline-end: 8px;
}

#urlbar-label-box {
  padding-inline: 4px;
  border-inline-start: 1px solid var(--urlbar-separator-color);
}

.urlbar-label {
  margin: 0;
}

.sharing-icon,
#identity-icon,
#permissions-granted-icon,
#tracking-protection-icon,
.notification-anchor-icon,
#blocked-permissions-container > .blocked-permission-icon {
  width: 16px;
  height: 16px;
  margin-inline-start: 4px;
  -moz-context-properties: fill, fill-opacity;
}

#tracking-protection-icon {
  margin-inline-start: 0;
}

/* MAIN IDENTITY ICON */
#identity-icon {
  margin-inline-start: 0;
  list-style-image: url(chrome://browser/skin/identity-icon.svg);
}

#identity-box[pageproxystate="valid"].chromeUI > #identity-icon {
  list-style-image: url(chrome://branding/content/identity-icons-brand.svg);
}

#identity-box[pageproxystate="invalid"] > #identity-icon {
  list-style-image: url(chrome://browser/skin/search-glass.svg);
  fill-opacity: .4;
}

#urlbar[actiontype="extension"] > #urlbar-input-container > #identity-box > #identity-icon {
  list-style-image: url(chrome://mozapps/skin/extensions/extensionGeneric-16.svg);
}

#identity-box[pageproxystate="valid"].extensionPage > #identity-icon {
  list-style-image: url(chrome://mozapps/skin/extensions/extensionGeneric-16.svg);
}

#identity-box[pageproxystate="valid"].verifiedDomain > #identity-icon,
#identity-box[pageproxystate="valid"].verifiedIdentity > #identity-icon,
#identity-box[pageproxystate="valid"].mixedActiveBlocked > #identity-icon {
  list-style-image: url(chrome://browser/skin/connection-secure.svg);
}

#identity-box[pageproxystate="valid"].verifiedDomain > #identity-icon:not([lock-icon-gray]),
#identity-box[pageproxystate="valid"].verifiedIdentity > #identity-icon:not([lock-icon-gray]),
#identity-box[pageproxystate="valid"].mixedActiveBlocked > #identity-icon:not([lock-icon-gray]) {
  fill-opacity: 1;
  fill: #12BC00;
}

#identity-box[pageproxystate="valid"].weakCipher > #identity-icon,
#identity-box[pageproxystate="valid"].mixedDisplayContent > #identity-icon,
#identity-box[pageproxystate="valid"].mixedDisplayContentLoadedActiveBlocked > #identity-icon,
#identity-box[pageproxystate="valid"].certUserOverridden > #identity-icon {
  list-style-image: url(chrome://browser/skin/connection-mixed-passive-loaded.svg);
  fill: unset;
}

#identity-box[pageproxystate="valid"].notSecure > #identity-icon,
#identity-box[pageproxystate="valid"].insecureLoginForms > #identity-icon,
#identity-box[pageproxystate="valid"].mixedActiveContent > #identity-icon {
  list-style-image: url(chrome://browser/skin/connection-mixed-active-loaded.svg);
}

#permissions-granted-icon {
  list-style-image: url(chrome://browser/skin/permissions.svg);
}

#identity-box:not(.grantedPermissions) > #permissions-granted-icon {
  display: none;
}

/* SHARING ICON */

#webrtc-sharing-icon[sharing="camera"] {
  list-style-image: url("chrome://browser/skin/notification-icons/camera.svg");
}

#webrtc-sharing-icon[sharing="microphone"] {
  list-style-image: url("chrome://browser/skin/notification-icons/microphone.svg");
}

#webrtc-sharing-icon[sharing="screen"] {
  list-style-image: url("chrome://browser/skin/notification-icons/screen.svg");
}

#geo-sharing-icon[sharing] {
  list-style-image: url("chrome://browser/skin/notification-icons/geo.svg");
}

.sharing-icon:not([sharing]) {
  display: none;
}

#webrtc-sharing-icon[sharing]:not([paused]) {
  animation: 1.5s ease in-use-blink infinite;
  -moz-context-properties: fill;
  fill: rgb(224, 41, 29);
}

@keyframes in-use-blink {
  50% { opacity: 0; }
}

/* TRACKING PROTECTION ICON */

#tracking-protection-icon-container {
  padding-inline-start: 6px;
  padding-inline-end: 6px;
  /* Separator */
  border-inline-end: 1px solid var(--urlbar-separator-color);
  border-image: linear-gradient(transparent 15%, var(--urlbar-separator-color) 15%, var(--urlbar-separator-color) 85%, transparent 85%);
  border-image-slice: 1;
  /* This is needed in order to position the blue dot indicator. */
  position: relative;
}

#urlbar-input-container[pageproxystate="valid"] > #tracking-protection-icon-container.chromeUI {
  display: none;
}

#tracking-protection-icon-box {
  overflow: hidden;
  width: 16px;
  height: 16px;
}
#tracking-protection-icon-box:not([hasException])[active][animationsenabled] > #tracking-protection-icon,
#tracking-protection-icon-box:not([animationsenabled])[active] > #tracking-protection-icon,
#tracking-protection-icon-box:not([animationsenabled]):not([active]) > #tracking-protection-icon-animatable-box,
#tracking-protection-icon-box:not([active]) > #tracking-protection-icon-animatable-box {
  display: none;
}

#tracking-protection-icon-box > #tracking-protection-icon-animatable-box {
  position: absolute;
  overflow: hidden;
  width: 16px;
  height: 16px;
}

#tracking-protection-icon-box:not([hasException])[active] #tracking-protection-icon-animatable-image {
  background-image: url(chrome://browser/skin/tracking-protection-animation.svg);
  transform: translateX(-256px);
  width: 272px;
  background-size: auto;
  height: 16px;
  min-height: 16px;
  -moz-context-properties: fill, fill-opacity;
}

#tracking-protection-icon-box[hasException]::before {
  background: url(chrome://browser/skin/badge-blue.svg);
  content: "";
  position: absolute;
  bottom: 15px;
  right: 0;
  height: 14px;
  width: 14px;
}

#tracking-protection-icon-box[hasException]:-moz-locale-dir(rtl)::before {
  left: 0;
  right: unset;
  /* This is needed in order to put the dot in front of the shield icon in rtl
     mode */
  z-index: 1;
}

:root[lwt-toolbar-field-brighttext] #tracking-protection-icon-box:not([hasException])[active] #tracking-protection-icon-animatable-image {
  background-image: url(chrome://browser/skin/tracking-protection-animation-brighttext.svg);
}

#tracking-protection-icon-box[active] #tracking-protection-icon-animatable-image:-moz-locale-dir(rtl) {
  transform: scaleX(-1) translateX(-256px);
}

#tracking-protection-icon-box[animationsenabled][active][animate] #tracking-protection-icon-animatable-image {
  animation-name: tp-icon-animation;
  animation-timing-function: steps(16);
  animation-duration: 1s;
  animation-fill-mode: forwards;
}

#tracking-protection-icon-box[animationsenabled][active][animate] #tracking-protection-icon-animatable-image:-moz-locale-dir(rtl) {
  animation-name: tp-icon-animation-rtl;
}

#tracking-protection-icon-tooltip {
  max-width: 500px;
}

#urlbar-input-container[pageproxystate="valid"] > #tracking-protection-icon-container > #tracking-protection-icon-box > #tracking-protection-icon {
  list-style-image: url(chrome://browser/skin/tracking-protection.svg);
}

#urlbar-input-container[pageproxystate="valid"] > #tracking-protection-icon-container > #tracking-protection-icon-box[hasException] > #tracking-protection-icon {
  list-style-image: url(chrome://browser/skin/tracking-protection-disabled.svg);
}

#urlbar-input-container[pageproxystate="valid"] > #tracking-protection-icon-container > #tracking-protection-icon-box > #tracking-protection-icon:-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}

#urlbar-input-container[pageproxystate="invalid"] > #tracking-protection-icon-container {
  visibility: collapse;
}

@keyframes tp-icon-animation {
  from {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-256px);
  }
}

@keyframes tp-icon-animation-rtl {
  from {
    transform: scaleX(-1) translateX(0);
  }
  100% {
    transform: scaleX(-1) translateX(-256px);
  }
}

/* REMOTE CONTROL ICON */

#remote-control-icon {
  visibility: collapse;
}

:root[remotecontrol] #remote-control-icon {
  list-style-image: url(chrome://browser/content/static-robot.png);
  visibility: visible;
  width: 16px;
  height: 16px;
  margin-inline-start: 2px;
}


.popup-notification-icon,
.identity-popup-permission-icon {
  -moz-context-properties: fill, fill-opacity;
  fill: currentColor;
  fill-opacity: 0.6;
}

#notification-popup-box {
  padding: 5px 0px;
  margin: -5px 0px;
  margin-inline-end: -5px;
  padding-inline-end: 5px;
}

.blocked-permission-icon:-moz-focusring,
.notification-anchor-icon:-moz-focusring {
  outline: var(--toolbarbutton-focus-outline);
  outline-offset: 4px;
  -moz-outline-radius: var(--toolbarbutton-border-radius);
}

/* This class can be used alone or in combination with the class defining the
   type of icon displayed. This rule must be defined before the others in order
   for its list-style-image to be overridden. */
.notification-anchor-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/default-info.svg);
}

/* INDIVIDUAL NOTIFICATIONS */

.focus-tab-by-prompt-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/focus-tab-by-prompt.svg);
}

.popup-notification-icon[popupid="persistent-storage"],
.popup-notification-icon[popupid="storage-access"],
.persistent-storage-icon,
.storage-access-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/persistent-storage.svg);
}

.persistent-storage-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/persistent-storage-blocked.svg);
}

.popup-notification-icon[popupid="web-notifications"],
.desktop-notification-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/desktop-notification.svg);
}

.desktop-notification-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/desktop-notification-blocked.svg);
}

.geo-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/geo.svg);
}

.geo-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/geo-blocked.svg);
}

.popup-notification-icon[popupid="geolocation"] {
  list-style-image: url(chrome://browser/skin/notification-icons/geo-detailed.svg);
}

.autoplay-media-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/autoplay-media.svg);
}

.popup-notification-icon[popupid="autoplay-media"] {
  list-style-image: url(chrome://browser/skin/notification-icons/autoplay-media-detailed.svg);
}

.autoplay-media-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/autoplay-media-blocked.svg);
}

.image-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/images.svg);
}

.image-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/images-blocked.svg);
}

.storage-access-notification-content {
  color: var(--panel-disabled-color);
  font-style: italic;
  margin-top: 15px;
}

.storage-access-notification-content .text-link {
  color: -moz-nativehyperlinktext;
}

.storage-access-notification-content .text-link:hover {
  text-decoration: underline;
}

#storage-access-notification .popup-notification-body-container {
  padding: 20px;
}

.popup-notification-icon[popupid="indexedDB-permissions-prompt"],
.indexedDB-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/indexedDB.svg);
}

.popup-notification-icon[popupid="password"],
.login-icon {
  list-style-image: url(chrome://browser/skin/login.svg);
}

.login-icon[extraAttr="attention"] {
  fill: var(--toolbarbutton-icon-fill-attention);
  fill-opacity: 1;
}

.camera-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/camera.svg);
}

.camera-icon.in-use {
  list-style-image: url(chrome://browser/skin/notification-icons/camera.svg);
}

.camera-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/camera-blocked.svg);
}

.microphone-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/microphone.svg);
}

.microphone-icon.in-use {
  list-style-image: url(chrome://browser/skin/notification-icons/microphone.svg);
}

.microphone-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/microphone-blocked.svg);
}

.popup-notification-icon.microphone-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/microphone-detailed.svg);
}

.screen-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/screen.svg);
}

.screen-icon.in-use {
  list-style-image: url(chrome://browser/skin/notification-icons/screen.svg);
}

.screen-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/screen-blocked.svg);
}

.midi-icon,
.midi-sysex-icon,
.popup-notification-icon[popupid="midi"],
.popup-notification-icon[popupid="midi-sysex"] {
  list-style-image: url(chrome://browser/skin/notification-icons/midi.svg);
}

#canvas-notification-icon,
.popup-notification-icon[popupid="canvas-permissions-prompt"],
.canvas-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/canvas.svg);
}

.canvas-icon.blocked-permission-icon {
  list-style-image: url(chrome://browser/skin/notification-icons/canvas-blocked.svg);
}

#webauthn-notification-icon,
.popup-notification-icon[popupid^="webauthn-prompt-"] {
  list-style-image: url(chrome://browser/skin/notification-icons/webauthn.svg);
}

#webRTC-preview:not([hidden]) {
  display: -moz-stack;
  border-radius: 4px;
  border: 1px solid var(--panel-separator-color);
  overflow: hidden;
  min-width: 300px;
  min-height: 10em;
}

html|*#webRTC-previewVideo {
  width: 300px;
  /* If we don't set the min-width, width is ignored. */
  min-width: 300px;
  max-height: 200px;
}

#webRTC-previewWarning {
  background: rgba(255,217,99,.8) url("chrome://browser/skin/warning.svg") no-repeat .75em .75em;
  color: #000;
  -moz-context-properties: fill;
  fill: currentColor;
  margin: 0;
  padding: .5em;
  padding-inline-start: calc(1.5em + 16px);
  border-top: 1px solid var(--panel-separator-color);
}

#webRTC-previewWarning:-moz-locale-dir(rtl) {
  background-position: calc(100% - .75em) .75em;
}

#webRTC-previewWarning > .text-link {
  margin-inline-start: 0;
}

/* This icon has a block sign in it, so we don't need a blocked version. */
.popup-icon {
  list-style-image: url("chrome://browser/skin/notification-icons/popup.svg");
}

.popup-subitem {
  list-style-image: url("chrome://browser/skin/notification-icons/popup-subitem.svg");
  margin-inline-start: 42px;
  width: 16px;
  height: 16px;
  -moz-context-properties: fill;
  fill: currentColor;
}

.popup-subitem:-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}

.identity-popup-popup-menulist {
  min-width: 6.5em;
}

/* EME */

.popup-notification-icon[popupid="drmContentPlaying"],
.drm-icon {
  list-style-image: url("chrome://browser/skin/drm-icon.svg");
}

.notification-anchor-icon[animate=true],
#eme-notification-icon[firstplay=true] {
  animation: emeTeachingMoment 0.2s linear 0s 5 normal;
}

@keyframes emeTeachingMoment {
  0% {transform: translateX(0); }
  25% {transform: translateX(3px) }
  75% {transform: translateX(-3px) }
  100% { transform: translateX(0); }
}

/* INSTALL ADDONS */

.install-icon {
  list-style-image: url(chrome://mozapps/skin/extensions/extensionGeneric-16.svg);
}

.install-icon.blocked-permission-icon,
.popup-notification-icon[popupid="xpinstall-disabled"],
.popup-notification-icon[popupid="addon-install-blocked"],
.popup-notification-icon[popupid="addon-install-origin-blocked"] {
  list-style-image: url(chrome://browser/skin/addons/addon-install-blocked.svg);
}

.popup-notification-icon[popupid="addon-progress"] {
  list-style-image: url(chrome://browser/skin/addons/addon-install-downloading.svg);
}

.popup-notification-icon[popupid="addon-install-failed"] {
  list-style-image: url(chrome://browser/skin/addons/addon-install-error.svg);
}

.popup-notification-icon[popupid="addon-install-confirmation"] {
  list-style-image: url(chrome://browser/skin/addons/addon-install-confirm.svg);
}

#addon-install-confirmation-notification[warning] .popup-notification-icon[popupid="addon-install-confirmation"] {
  list-style-image: url(chrome://browser/skin/addons/addon-install-warning.svg);
}

.popup-notification-icon[popupid="addon-install-complete"] {
  list-style-image: url(chrome://browser/skin/addons/addon-install-installed.svg);
}

/* OFFLINE APPS */

.popup-notification-icon[popupid="offline-app-usage"] {
  list-style-image: url(chrome://global/skin/icons/question-64.png);
}

/* PLUGINS */

.plugin-icon {
  list-style-image: url(chrome://global/skin/plugins/plugin.svg);
  transition: fill 1.5s;
}

#plugin-icon-badge {
  list-style-image: url(chrome://browser/skin/notification-icons/plugin-badge.svg);
  opacity: 0;
  transition: opacity 1.5s;
}

#plugins-notification-icon[extraAttr="inactive"] > .plugin-icon {
  fill: #bfbfbf;
}

#plugins-notification-icon[extraAttr="inactive"] > #plugin-icon-badge {
  opacity: 1;
}

#plugins-notification-icon[extraAttr="inactive"] > #plugin-icon-badge[animate] {
  animation: blink-badge 1000ms ease 0s 5 alternate both;
}

@keyframes blink-badge {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.plugin-blocked > .plugin-icon {
  list-style-image: url(chrome://global/skin/plugins/plugin-blocked.svg);
  fill: #d92215 !important;
}

.plugin-blocked > #plugin-icon-badge {
  visibility: collapse;
}

#notification-popup-box[hidden] {
  /* Override display:none to make the pluginBlockedNotification animation work
     when showing the notification repeatedly. */
  display: -moz-box;
  visibility: collapse;
}

#plugins-notification-icon.plugin-blocked[showing] {
  animation: pluginBlockedNotification 500ms ease 0s 5 alternate both;
}

@keyframes pluginBlockedNotification {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* TRANSLATION */

.translation-icon {
  list-style-image: url(chrome://browser/skin/translation-16.png);
  -moz-image-region: rect(0px, 16px, 16px, 0px);
}

.translation-icon.in-use {
  -moz-image-region: rect(0px, 32px, 16px, 16px);
}


/* UPDATE */
.popup-notification-icon[popupid="update-available"],
.popup-notification-icon[popupid="update-manual"],
.popup-notification-icon[popupid="update-restart"] {
  background: #74BF43 url(chrome://browser/skin/notification-icons/update.svg) no-repeat center;
  border-radius: 50%;
}

.popup-notification-icon[popupid="update-unsupported"] {
  background: #FFE900 url(chrome://browser/skin/notification-icons/update.svg) no-repeat center;
  border-radius: 50%;
}

.popup-notification-body[popupid="addon-progress"],
.popup-notification-body[popupid="addon-install-confirmation"] {
  width: 28em;
  max-width: 28em;
}

.addon-install-confirmation-name {
  font-weight: bold;
}

html|*.addon-webext-perm-list {
  margin-block-end: 0;
  padding-inline-start: 10px;
}

.addon-webext-perm-text {
  margin-inline-start: 0;
}

.popup-notification-description[popupid="addon-webext-permissions"],
.popup-notification-description[popupid="addon-webext-permissions-notification"] {
  margin-inline-start: -1px;
}

.addon-webext-perm-notification-content,
.addon-installed-notification-content {
  margin-top: 0;
}

.addon-installed-notification-content > checkbox {
  margin: 8px 4px 2px;
  flex-wrap: wrap;
}

.addon-webext-name {
  display: inline;
  font-weight: bold;
  margin: 0;
}

.addon-addon-icon,
.addon-toolbar-icon {
  width: 14px;
  height: 14px;
  vertical-align: bottom;
  margin-bottom: 1px;
  -moz-context-properties: fill;
  fill: currentColor;
}

.addon-addon-icon {
  list-style-image: url("chrome://mozapps/skin/extensions/extensionGeneric-16.svg");
}

.addon-toolbar-icon {
  list-style-image: url("chrome://browser/skin/menu.svg");
}

/* Translation infobar */

notification[value="translation"] .messageImage {
  list-style-image: url(chrome://browser/skin/translation-16.png) !important;
  -moz-image-region: rect(0, 32px, 16px, 16px);
}

@media (min-resolution: 1.25dppx) {
  notification[value="translation"] .messageImage {
    list-style-image: url(chrome://browser/skin/translation-16@2x.png) !important;
    -moz-image-region: rect(0, 64px, 32px, 32px);
  }
}

notification[value="translation"][state="translating"] .messageImage {
  list-style-image: url(chrome://browser/skin/translating-16.png) !important;
  -moz-image-region: auto;
}

@media (min-resolution: 1.25dppx) {
  notification[value="translation"][state="translating"] .messageImage {
    list-style-image: url(chrome://browser/skin/translating-16@2x.png) !important;
  }
}

notification[value="translation"] hbox[anonid="details"] {
  overflow: hidden;
}

notification[value="translation"] button,
notification[value="translation"] menulist {
  -moz-appearance: none;
  border-radius: 2px;
  min-width: 0;
  box-shadow: 0 1px rgba(255, 255, 255, 0.5), 0 1px rgba(255, 255, 255, 0.5) inset;
}

notification[value="translation"] menulist > .menulist-dropmarker {
  -moz-appearance: toolbarbutton-dropdown;
  border: none;
  background-color: transparent;
  margin: auto;
  padding: 5px 0;
}

.translation-menupopup arrowscrollbox {
  padding-bottom: 0;
}

.translation-attribution {
  cursor: pointer;
  -moz-box-align: end;
  font-size: small;
}

.translation-attribution > label {
  margin-bottom: 0;
}

.translation-attribution > image {
  width: 70px;
}

.translation-welcome-panel {
  width: 305px;
}

.translation-welcome-logo {
  height: 32px;
  width: 32px;
  list-style-image: url(chrome://browser/skin/translation-16@2x.png);
  -moz-image-region: rect(0, 64px, 32px, 32px);
}

.translation-welcome-content {
  margin-inline-start: 16px;
}

.translation-welcome-headline {
  font-size: larger;
  font-weight: bold;
}

.translation-welcome-body {
  padding: 1em 0;
  margin: 0 0;
}

notification[value="translation"] {
  min-height: 40px;
}

notification[value="translation"],
notification[value="translation"] button,
notification[value="translation"] menulist {
  min-height: 30px;
  color: #5A5959;
}

notification[value="translation"] {
  background-color: #F2F1F0;
}

notification[value="translation"] button,
notification[value="translation"] menulist {
  padding-inline-end: 1ch;
}

notification[value="translation"] menulist {
  border: 1px solid #C1C1C1;
  background-color: #FFF;
}

notification[value="translation"] button {
  border: 1px solid #C1C1C1;
  background-color: #F2F1F0;
}

notification[value="translation"] button,
notification[value="translation"] menulist,
notification[value="translation"] menulist > .menulist-label-box {
  margin-inline-start: 1ch;
  margin-inline-end: 1ch;
}

notification[value="translation"] button:hover,
notification[value="translation"] button:active,
notification[value="translation"] menulist:hover,
notification[value="translation"] menulist:active {
  background-color: #E2E1E0;
}

notification[value="translation"] button[anonid="translate"] {
  color: #FFF;
  background-image: linear-gradient(#9FB938, #8DA726);
  box-shadow: none;
  border: 1px solid #829C1C;
}

notification[value="translation"] button[anonid="translate"]:hover,
notification[value="translation"] button[anonid="translate"]:active {
  background-image: linear-gradient(#8DA726, #8DA726);
}

notification[value="translation"] button > .button-box,
notification[value="translation"] button[type="menu"] > .button-box > .button-menu-dropmarker {
  padding: 0;
  margin-inline-start: 3ch;
}

notification[value="translation"] button:not([type="menu"]) > .button-box {
  margin-inline-end: 3ch;
}

notification[value="translation"] menulist > .menulist-dropmarker {
  display: block;
}

/* AutoComplete */


/* General popup rules */

#PopupAutoComplete > richlistbox > richlistitem {
  min-height: 20px;
  border: 0;
  border-radius: 0;
  padding: 0px 1px 0px 1px;
}

#PopupAutoComplete > richlistbox > richlistitem > .ac-site-icon {
  margin-inline-start: 4px;
  margin-inline-end: 0;
}

#PopupAutoComplete > richlistbox > richlistitem > .ac-title {
  font: icon;
  margin-inline-start: 4px;
}

#PopupAutoComplete > richlistbox {
  padding: 0;
}

/* Popup states */

.autocomplete-richlistitem:hover {
  background-color: var(--arrowpanel-dimmed);
}

.autocomplete-richlistitem[selected] {
  background-color: Highlight;
  color: HighlightText;
}

/* Autocomplete richlistitem support for a two-line label display */

#PopupAutoComplete > richlistbox > richlistitem > .two-line-wrapper {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  margin: 0;
}

#PopupAutoComplete > richlistbox > richlistitem > .two-line-wrapper > .ac-site-icon {
  margin-inline-start: auto;
  margin-inline-end: 4px;
}

#PopupAutoComplete > richlistbox > richlistitem > .two-line-wrapper > .labels-wrapper {
  /* The text should flex while the icon should not */
  flex: 1;
  /* width/min-width are needed to get the text-overflow: ellipsis to work for the children */
  min-width: 0;
  width: 0;
}

#PopupAutoComplete > richlistbox > richlistitem > .two-line-wrapper > .labels-wrapper > .label-row {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

#PopupAutoComplete > richlistbox > richlistitem > .two-line-wrapper > .labels-wrapper > .line2-label {
  padding-top: 2px !important;
  opacity: .6;
}

/* Login form autocompletion (with and without origin showing) and generated passwords */
#PopupAutoComplete > richlistbox > richlistitem[originaltype="generatedPassword"] > .two-line-wrapper > .ac-site-icon,
#PopupAutoComplete > richlistbox > richlistitem[originaltype="loginWithOrigin"] > .two-line-wrapper > .ac-site-icon,
#PopupAutoComplete > richlistbox > richlistitem[originaltype="login"] > .ac-site-icon {
  display: initial;
  list-style-image: url(chrome://browser/skin/login.svg);
  -moz-context-properties: fill;
  fill: GrayText;
}

#PopupAutoComplete > richlistbox > richlistitem[originaltype="generatedPassword"][selected] > .two-line-wrapper > .ac-site-icon,
#PopupAutoComplete > richlistbox > richlistitem[originaltype="loginWithOrigin"][selected] > .two-line-wrapper > .ac-site-icon,
#PopupAutoComplete > richlistbox > richlistitem[originaltype="login"] > .ac-site-icon[selected] {
  fill: HighlightText;
}

/* Login form autocompletion with origin showing and generated passwords */
#PopupAutoComplete > richlistbox > richlistitem[originaltype="generatedPassword"],
#PopupAutoComplete > richlistbox > richlistitem[originaltype="loginWithOrigin"] {
  padding: 4px;
}

#PopupAutoComplete > richlistbox > richlistitem[originaltype="generatedPassword"] > .two-line-wrapper > .labels-wrapper > .line2-label {
  font-family: monospace;
}

#PopupAutoComplete > richlistbox > richlistitem[originaltype="login"] + richlistitem[originaltype="generatedPassword"],
#PopupAutoComplete > richlistbox > richlistitem[originaltype="loginWithOrigin"] + richlistitem[originaltype="generatedPassword"] {
  /* Separator between logins and generated passwords. This uses --panel-separator-color from default
   * themes since autocomplete doesn't yet switch to dark. */
  border-top: 1px solid hsla(210,4%,10%,.14);
}

/* Insecure field warning */
#PopupAutoComplete > richlistbox > richlistitem[originaltype="insecureWarning"] {
  background-color: var(--arrowpanel-dimmed);
  border-bottom: 1px solid var(--panel-separator-color);
  padding-bottom: 4px;
  padding-top: 4px;
}

#PopupAutoComplete > richlistbox > richlistitem[originaltype="insecureWarning"][selected] {
  background-color: var(--arrowpanel-dimmed-further);
  color: -moz-DialogText;
}

#PopupAutoComplete > richlistbox > richlistitem[originaltype="insecureWarning"] > .ac-title {
  color: GrayText;
  font-size: 1em;
}

#PopupAutoComplete > richlistbox > richlistitem[originaltype="insecureWarning"][selected] > .ac-title {
  color: inherit;
}

#PopupAutoComplete > richlistbox > richlistitem[originaltype="insecureWarning"] > .ac-site-icon {
  list-style-image: url(chrome://browser/skin/connection-mixed-active-loaded.svg);
  -moz-context-properties: fill;
  fill: GrayText;
}


:root {
  --autocomplete-popup-background: var(--arrowpanel-background);
  --autocomplete-popup-color: var(--arrowpanel-color);
  --autocomplete-popup-highlight-background: Highlight;
  --autocomplete-popup-highlight-color: HighlightText;

  /* From in-content/common.inc.css. */
  --in-content-button-background: rgba(12, 12, 13, 0.1);
  --in-content-button-background-hover: rgba(12, 12, 13, 0.2);
  --in-content-button-background-active: rgba(12, 12, 13, 0.3);
  --in-content-primary-button-background: #0060df;
  --in-content-primary-button-background-hover: #003eaa;
  --in-content-primary-button-background-active: #002275;
}

:root[lwt-popup-darktext] {
  --urlbar-popup-url-color: hsl(210, 77%, 47%);
  --urlbar-popup-action-color: hsl(178, 100%, 28%);
}

:root[lwt-popup-brighttext] {
  --urlbar-popup-url-color: #45a1ff;
  --urlbar-popup-action-color: #30e60b;

  /* From in-content/common.inc.css. */
  --in-content-button-background-hover: rgba(249, 249, 250, 0.15);
  --in-content-button-background-active: rgba(249, 249, 250, 0.2);
}

.urlbarView {
  /* Don't handle window drag events in case we are overlapping a toolbar */
  -moz-window-dragging: no-drag;
  text-shadow: none;
}

.urlbarView.megabar {
  margin-inline: 8px;
  width: calc(100% - 2 * 8px);
}

.urlbarView.megabar:not([hidden]) {
  display: block;
}

.urlbarView.megabar .urlbarView-body-inner {
  width: 100%;
  border-top: 1px solid var(--panel-separator-color);
}

.urlbarView:not(.megabar) {
  position: fixed;
  z-index: 1;
  left: 0;
  right: 0;
  background: var(--autocomplete-popup-background);
  color: var(--autocomplete-popup-color);
  border-block: 1px solid var(--chrome-content-separator-color);
}

#urlbar-contextual-tip {
  align-items: center;
  display: flex;
  padding-top: 24px;
  padding-bottom: 24px;
  padding-inline-start: calc((55px - 16px /* type icon width */ - 8px - 2px /* border */));
  padding-inline-end: calc(55px - 8px);
}

.urlbarView:not(.megabar) #urlbar-contextual-tip {
  padding-inline-start: var(--item-padding-start, calc(5px + (4px + 16px /* type icon width */ + 8px)));
  padding-inline-end: var(--item-padding-end, 5px);
}

#urlbar-contextual-tip-title {
  flex-grow: 1;
  padding-inline-end: 75px;
}

#urlbar-contextual-tip-button {
  height: 2.3em;
  width: 9.15em;
  font-size: inherit;
  border: none;
  border-radius: 2px;
  color: white;
  background-color: var(--in-content-primary-button-background);
}

#urlbar-contextual-tip-button:hover {
  background-color: var(--in-content-primary-button-background-hover);
}

#urlbar-contextual-tip-button:active {
  background-color: var(--in-content-primary-button-background-active);
}

#urlbar-contextual-tip-button:-moz-focusring {
  box-shadow: 0 0 0 1px #0a84ff inset, 0 0 0 1px #0a84ff, 0 0 0 4px rgba(10, 132, 255, 0.3);
}

#urlbar-contextual-tip-link {
  text-align: end;
}

.urlbarView-results {
  padding-block: 4px;
  white-space: nowrap;
}

.urlbarView:not(.megabar) .urlbarView-results {
  padding-inline: 4px;
}

.urlbarView-row {
  border-radius: 2px;
  fill: currentColor;
  fill-opacity: .6;
  padding-top: 6px;
  padding-bottom: 6px;
  padding-inline-start: calc((55px - 16px /* type icon width */ - 8px - 2px /* border */));
  padding-inline-end: calc(55px - 8px);
}

.urlbarView:not(.megabar) .urlbarView-row {
  padding-inline-start: calc(var(--item-padding-start, calc(5px + (4px + 16px /* type icon width */ + 8px))) - (4px + 16px /* type icon width */ + 8px));
  padding-inline-end: var(--item-padding-end, 5px);
}

:root[uidensity=touch] .urlbarView-row {
  padding-top: 11px;
  padding-bottom: 11px;
}

.urlbarView-row-inner {
  display: flex;
  flex-wrap: nowrap;
  align-items: end;
  justify-content: start;
}

.urlbarView-title[overflow],
.urlbarView-url[overflow] {
  mask-image: linear-gradient(to left, transparent, black 2em);
}

.urlbarView-title[overflow]:not([isurl]):-moz-locale-dir(rtl) {
  mask-image: linear-gradient(to right, transparent, black 2em);
}

.urlbarView-title[isurl]:-moz-locale-dir(rtl),
.urlbarView-url:-moz-locale-dir(rtl) {
  direction: ltr !important;
}

.urlbarView-row:not([type=tip]):hover {
  background: var(--arrowpanel-dimmed);
}

.urlbarView-row:not([type=tip])[selected] {
  background: var(--autocomplete-popup-highlight-background);
  color: var(--autocomplete-popup-highlight-color);
  fill-opacity: 1;
}

.urlbarView-type-icon,
.urlbarView-favicon {
  min-width: 16px;
  height: 16px;
  margin-inline-end: 8px;
  background-repeat: no-repeat;
  background-size: contain;
  -moz-context-properties: fill, fill-opacity;
}

.urlbarView-row[type=tip] > .urlbarView-row-inner > .urlbarView-favicon {
  min-width: 24px;
  height: 24px;
  margin-inline-end: 12px;
}

/* The help icon is a standard Photon ghost button. */
.urlbarView-tip-help {
  min-width: 16px;
  height: 32px;
  background-image: url("chrome://global/skin/icons/help.svg");
  background-size: 16px;
  background-position: center;
  background-repeat: no-repeat;
  padding-inline: 8px;
  margin-inline-start: 8px;
  -moz-context-properties: fill, fill-opacity;
}

.urlbarView-tip-help:hover {
  background-color: var(--in-content-button-background-hover);
}

.urlbarView-tip-help:hover:active {
  background-color: var(--in-content-button-background-active);
}

.urlbarView-tip-help:-moz-focusring,
.urlbarView-tip-button:-moz-focusring {
  box-shadow: 0 0 0 1px #0a84ff inset, 0 0 0 1px #0a84ff, 0 0 0 4px rgba(10, 132, 255, 0.3);
}

#urlbar-contextual-tip-icon {
  min-width: 24px;
  height: 24px;
  margin-inline-end: 8px;
  background-repeat: no-repeat;
  background-size: contain;
  -moz-context-properties: fill, fill-opacity;
}

@media (min-resolution: 2dppx) {
  .urlbarView-type-icon,
  .urlbarView-favicon,
  #urlbar-contextual-tip-icon {
      transform: translateY(-1.5px);
  }
}

.urlbarView-row[type=bookmark] > .urlbarView-row-inner > .urlbarView-type-icon {
  background-image: url(chrome://browser/skin/bookmark.svg);
}

.urlbarView-row[type=remotetab] > .urlbarView-row-inner > .urlbarView-type-icon,
.urlbarView:not([actionoverride]) .urlbarView-row[type=switchtab] > .urlbarView-row-inner > .urlbarView-type-icon {
  background-image: url(chrome://browser/skin/tab.svg);
}

.urlbarView-row[type=tip] {
  border-bottom: 1px solid var(--panel-separator-color);
  padding-block: 24px;
  margin-bottom: 4px;
}

.urlbarView-row[type=tip]:not(:first-child) {
  border-top: 1px solid var(--panel-separator-color);
  margin-top: 4px;
}

.urlbarView-row[type=tip] > .urlbarView-row-inner {
  display: flex;
  align-items: center;
  min-height: 32px;
  width: 100%;
}

/* The tip button is a Photon default button when unfocused and a
   primary button in all other states. */
.urlbarView-tip-button {
  min-height: 32px;
  padding: 8px;
  border: none;
  border-radius: 2px;
  font-size: 0.93em;
  color: inherit;
  background-color: var(--in-content-button-background);
  min-width: 10em;
  flex-shrink: 0;
}

.urlbarView-tip-button:hover {
  color: white;
  background-color: var(--in-content-primary-button-background-hover);
}

.urlbarView-tip-button:hover:active {
  color: white;
  background-color: var(--in-content-primary-button-background-active);
}

.urlbarView-tip-button:-moz-focusring {
 color: white:
 background-color: var(--in-content-primary-button-background);
}

.urlbarView-tip-button-spacer {
  flex: 1;
  min-width: 75px;
}

.urlbarView-title {
  overflow: hidden;
  white-space: nowrap;
  /* We prioritize the title over the url, so it can grow freely, but it should
     never crop the url completely */
  flex-shrink: 0;
  max-width: calc(70% - 2 * (16px + 8px));
}

.urlbarView-row[type=tip] > .urlbarView-row-inner > .urlbarView-title {
   white-space: normal;
   flex: auto;
}

.urlbarView-title-separator::before {
  content: "\2014";
  color: var(--panel-disabled-color);
  margin: 0 .4em;
}

.urlbarView-title:empty + .urlbarView-tags:empty + .urlbarView-title-separator {
  display: none;
}

.urlbarView-tags,
.urlbarView-title:not(:empty) ~ .urlbarView-secondary {
  font-size: .85em;
}

.urlbarView-title > strong,
.urlbarView-url > strong,
.urlbarView-tag > strong {
  font-weight: 600;
}

.urlbarView-title:not(:empty) ~ .urlbarView-secondary {
  color: var(--urlbar-popup-action-color);
}

.urlbarView-url {
  overflow: hidden;
}

.urlbarView-title:not(:empty) ~ .urlbarView-url {
  color: var(--urlbar-popup-url-color);
}

.urlbarView-row[selected] > .urlbarView-row-inner > .urlbarView-title-separator::before,
.urlbarView-row[selected] > .urlbarView-row-inner > .urlbarView-secondary {
  color: inherit;
}

.urlbarView-row[type=remotetab][selected] > .urlbarView-row-inner > .urlbarView-action,
.urlbarView-row[type=remotetab]:hover > .urlbarView-row-inner > .urlbarView-action,
.urlbarView-row[type=remotetab]:not([selected]):not(:hover) > .urlbarView-row-inner > .urlbarView-url,
.urlbarView-row[type=search]:not([selected]):not(:hover) > .urlbarView-row-inner > .urlbarView-title:not(:empty) ~ .urlbarView-action,
.urlbarView-row[type=search]:not([selected]):not(:hover) > .urlbarView-row-inner > .urlbarView-title-separator,
.urlbarView[actionoverride] .urlbarView-row[type=switchtab] > .urlbarView-row-inner > .urlbarView-action,
.urlbarView:not([actionoverride]) .urlbarView-row[type=switchtab] > .urlbarView-row-inner > .urlbarView-url {
  /* Use visibility:collapse instead of display:none since the latter can
     confuse the overflow state of title and url elements when their content
     changes while they're hidden. */
  visibility: collapse;
}

.urlbarView-tags {
  overflow: hidden;
}

.urlbarView-tag {
  background-color: var(--arrowpanel-dimmed);
  border-radius: 2px;
  border: 1px solid var(--panel-separator-color);
  padding: 0 1px;
  margin-inline-start: .4em;
}

.urlbarView-row[selected] > .urlbarView-row-inner > .urlbarView-tags > .urlbarView-tag {
  background-color: var(--autocomplete-popup-highlight-color);
  color: var(--autocomplete-popup-highlight-background);
}

/* Search one-offs. */
#urlbar .search-one-offs {
  -moz-box-orient: horizontal;
  padding-block: 16px;
}

.urlbarView.megabar .search-one-offs {
  padding-inline: calc(55px - 8px);
}

#urlbar:not(.megabar) .search-one-offs {
  padding-inline-start: var(--item-padding-start, 5px);
  padding-inline-end: var(--item-padding-end, 5px);
}

#urlbar .search-panel-one-offs {
  padding-inline: 12px;
}

#urlbar .search-panel-header {
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

#urlbar .searchbar-engine-one-off-item {
  min-width: 32px;
  height: 32px;
  margin: 0 4px;
}

/* search bar popup */

#PopupSearchAutoComplete {
  background: var(--autocomplete-popup-background);
  color: var(--autocomplete-popup-color);
  border-color: var(--arrowpanel-border-color);
}

#PopupSearchAutoComplete .autocomplete-richlistitem[selected] {
  background: var(--autocomplete-popup-highlight-background);
  color: var(--autocomplete-popup-highlight-color);
}


:root {
  --urlbar-popup-url-color: -moz-nativehyperlinktext;
  --urlbar-popup-action-color: -moz-nativehyperlinktext;
}

#PopupAutoComplete > richlistbox > richlistitem[originaltype~="datalist-first"] {
  border-top: 1px solid ThreeDShadow;
}

.urlbarView {
  font-size: 1.05em;
}

/* Bookmarking panel */


#editBookmarkPanelTitle {
  margin-inline-start: 32px;
}

.panel-info-button {
  border-radius: var(--toolbarbutton-border-radius);
  margin-right: 4px;
}

.panel-info-button[disabled=true] {
  visibility: hidden;
}

.panel-info-button[checked] {
  background-color: var(--toolbarbutton-active-background);
}

.panel-info-button:hover {
  background-color: var(--toolbarbutton-hover-background);
}

.panel-info-button:focus {
  background-color: var(--toolbarbutton-hover-background);
  box-shadow: var(--focus-ring-box-shadow);
}

.panel-info-button > image {
  list-style-image: url(chrome://browser/skin/identity-icon.svg);
  -moz-context-properties: fill, fill-opacity;
  fill: currentColor;
  fill-opacity: var(--toolbarbutton-icon-fill-opacity);
  padding: 2px;
}

#editBookmarkPanelInfoArea {
  overflow: hidden;
  position: relative;
  margin: 6px 8px 0 8px;
}

#editBookmarkPanelRecommendation {
  position: absolute;
  height: 100%;
  width: 100%;
  transition: transform 0.25s cubic-bezier(0.07, 0.95, 0, 1);
}

#editBookmarkPanelRecommendation[disabled] {
  transform: translateY(-100%);
}

#editBookmarkPanelRecommendation #cfrMessageContainer {
  border-radius: 2px;
  display: flex;
  flex-direction: column;
  min-height: 150px;
  cursor: pointer;
  position: relative;
  padding: 0 16px;
}

#editBookmarkPanelRecommendation #cfrMessageContainer.longMessagePadding {
  padding-bottom: 10px;
}

#editBookmarkPanelRecommendation > div::-moz-focus-inner {
  border: none;
}

#editBookmarkPanelRecommendationTitle {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.25;
  margin: 0;
}

#editBookmarkPanelRecommendationContent {
  font-size: 11px;
  line-height: 1.5;
  margin: 0;
}

#editBookmarkPanelRecommendationCta {
  -moz-appearance: none;
  background: transparent;
  border: none;
  color: inherit;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 700;
  margin: auto 0;
  padding: 0;
  text-align: start;
}

#editBookmarkPanelRecommendationCta:hover {
  text-decoration: underline;
}

#editBookmarkPanelRecommendation .cfrMessageHeader {
  display: flex;
  justify-content: space-between;
  align-items: start;
  margin-bottom: 6px;
  margin-top: 10px;
  padding-top: 2px;
}

#editBookmarkPanelRecommendation #cfrClose {
  padding: 10px;
  width: 12px;
  height: 12px;
  border: none;
  border-radius: var(--toolbarbutton-border-radius);
  background-color: transparent;
  background-image: url(chrome://browser/skin/stop.svg);
  background-size: 12px;
  background-repeat: no-repeat;
  background-position: center;
  -moz-context-properties: fill, fill-opacity;
  fill: currentColor;
  fill-opacity: 0.6;
  cursor: pointer;
}

#editBookmarkPanelRecommendation #cfrClose:hover {
  fill-opacity: 1;
  background-color: var(--toolbarbutton-hover-background);
}

#editBookmarkPanelRecommendation #cfrClose:active,
#editBookmarkPanelRecommendation #cfrClose:focus {
  box-shadow: var(--focus-ring-box-shadow);
}

html|div#editBookmarkPanelFaviconContainer {
  display: flex;
}

html|img#editBookmarkPanelFavicon[src] {
  box-sizing: content-box;
  width: 32px;
  height: 32px;
  padding: 5px;
  background-color: #F9F9FA;
  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1);
  border-radius: 6px;
  margin-top: 10px;
  margin-inline-start: 10px;
  margin-bottom: -52px; /* margin-top + paddings + height */
}

#editBookmarkPanelImage {
  border-radius: 2px;
  height: 150px;
  background-image: -moz-element(#editBookmarkPanelImageCanvas);
  background-repeat: no-repeat;
  background-size: cover;
  margin: 0 2px;
  /* When adjusting the height for long CFR messages we want the animations
   * to align. The delay is used to force the animation to start when the
   * panel message has finished sliding down. */
  transition: height 0.28s cubic-bezier(0.07, 0.95, 0, 1);
  transition-delay: 10ms;
}

#editBookmarkPanelRows,
#editBookmarkPanelBottomContent {
  padding: var(--arrowpanel-padding);
}

#editBookmarkPanelRows {
  padding-bottom: 0;
}

#editBookmarkPanelBottomContent {
  padding-top: 0;
}

/* Implements editBookmarkPanel resizing on folderTree un-collapse. */
#editBMPanel_folderTree {
  min-width: 27em;
}

#editBookmarkPanelBottomButtons {
  display: flex;
}

.editBookmarkPanelBottomButton {
  flex: 1;
}

.editBookmarkPanelBottomButton:not(:last-child) {
  border-inline-end: 1px solid var(--panel-separator-color);
}

/* Content area */


#sidebar-box {
  --sidebar-background-color: -moz-Field;
  --sidebar-text-color: -moz-FieldText;
  background-color: var(--sidebar-background-color);
  color: var(--sidebar-text-color);
}

#sidebar-header {
  font-size: 1.333em;
  padding: 8px;
  border-bottom: 1px solid var(--sidebar-border-color);
  background-color: transparent;
  color: inherit;
}


#sidebar-throbber[loading="true"] {
  list-style-image: url("chrome://global/skin/icons/loading.png");
}

@media (min-resolution: 2dppx) {
  #sidebar-throbber[loading="true"] {
    list-style-image: url("chrome://global/skin/icons/loading@2x.png");
    width: 16px;
  }
}

#sidebar-title {
  margin: 0;
  padding: 0;
  padding-inline-start: 8px;
  padding-inline-end: 4px;
}

#sidebar-switcher-arrow {
  -moz-context-properties: fill;
  fill: currentColor;
  opacity: 0.8;
}

#sidebar-switcher-arrow {
  list-style-image: url(chrome://global/skin/icons/arrow-dropdown-12.svg);
  width: 12px;
  height: 12px;
}

#sidebar-switcher-target {
  -moz-appearance: none;
  color: inherit;
  margin-inline-end: 4px;
  border-radius: var(--toolbarbutton-border-radius);
  border: 1px solid transparent;
  padding: 2px 4px;
}

#sidebar-switcher-target:hover {
  background: var(--toolbarbutton-hover-background);
}

#sidebar-switcher-target:hover:active,
#sidebar-switcher-target.active {
  background: var(--toolbarbutton-active-background);
}

/* Ensure we do not lose contrast between lightweight and OS theme colours */
#sidebar-switcher-target:hover:-moz-lwtheme {
  background: hsla(240, 5%, 5%, 0.1);
}
#sidebar-switcher-target:hover:active:-moz-lwtheme,
#sidebar-switcher-target.active:-moz-lwtheme {
  background: hsla(240, 5%, 5%, 0.15);
}

#sidebarMenu-popup .subviewbutton {
  min-width: 190px;
}

toolbarseparator + #sidebar-extensions-separator {
  display: none;
}

#sidebarMenu-popup > .subviewbutton[checked="true"] {
  list-style-image: none;
  background: url(chrome://global/skin/icons/check.svg) no-repeat transparent;
  background-size: 11px 11px;
}


#sidebarMenu-popup > .subviewbutton[checked="true"] {
  background-position: center left 7px;
}

#sidebarMenu-popup > .subviewbutton[checked="true"]:-moz-locale-dir(rtl) {
  background-position: center right 7px;
}

/* Allow room for the checkbox drawn as a background image at the start of the toolbarbutton */
#sidebarMenu-popup > .subviewbutton-iconic > .toolbarbutton-icon {
  margin-inline-start: 16px;
}
/* Align items without icons to the start of the icons: */
#sidebarMenu-popup > .subviewbutton:not(.subviewbutton-iconic) > .toolbarbutton-text {
  padding-inline-start: 16px;
}


#sidebar-switcher-bookmarks > .toolbarbutton-icon,
#sidebar-box[sidebarcommand="viewBookmarksSidebar"] > #sidebar-header > #sidebar-switcher-target > #sidebar-icon {
  list-style-image: url(chrome://browser/skin/bookmark.svg);
  -moz-context-properties: fill;
  fill: currentColor;
  opacity: 0.8;
}

#sidebar-switcher-history > .toolbarbutton-icon,
#sidebar-box[sidebarcommand="viewHistorySidebar"] > #sidebar-header > #sidebar-switcher-target > #sidebar-icon {
  list-style-image: url(chrome://browser/skin/history.svg);
  -moz-context-properties: fill;
  fill: currentColor;
  opacity: 0.8;
}

#sidebar-switcher-tabs > .toolbarbutton-icon,
#sidebar-box[sidebarcommand="viewTabsSidebar"] > #sidebar-header > #sidebar-switcher-target > #sidebar-icon {
  list-style-image: url(chrome://browser/skin/tab.svg);
  -moz-context-properties: fill;
  fill: currentColor;
  opacity: 0.8;
}

#browser {
  --sidebar-border-color: ThreeDShadow;
}

.sidebar-splitter {
  -moz-appearance: none;
  width: 6px;
  background-color: -moz-dialog;
  border: 1px ThreeDShadow;
  border-style: none solid;
}

.browserContainer > findbar {
  background-color: var(--toolbar-non-lwt-bgcolor);
  color: var(--toolbar-non-lwt-textcolor);
  text-shadow: none;
}

:root:not([lwtheme-image]) .browserContainer > findbar:-moz-lwtheme {
  background-color: var(--lwt-accent-color);
  background-image: linear-gradient(var(--toolbar-bgcolor), var(--toolbar-bgcolor));
  border-top-color: var(--chrome-content-separator-color);
  color: var(--toolbar-color);
}

/* Tabstrip */


:root {
  --tab-min-height: 33px;
}

:root[uidensity=compact] {
  --tab-min-height: 29px;
}

:root[uidensity=touch] {
  --tab-min-height: 41px;
}

#tabbrowser-tabs {
  --tabs-top-border-width: 0px;
  --tab-min-width: 76px;
  --tab-loading-fill: #0A84FF;
}

#tabbrowser-tabs:-moz-lwtheme {
  --tab-line-color: currentColor;
}

#tabbrowser-tabpanels {
  /* Value for --in-content-page-background in in-content/common.inc.css */
  background-color: #f9f9fa;
}

:root[privatebrowsingmode=temporary] #tabbrowser-tabpanels {
  /* Value for --in-content-page-background in aboutPrivateBrowsing.css */
  background-color: #25003e;
}

@supports -moz-bool-pref("browser.in-content.dark-mode") {
@media (prefers-color-scheme: dark) {
  #tabbrowser-tabpanels {
    /* Value for --in-content-page-background for dark mode in in-content/common.inc.css */
    background-color: #2A2A2E;
  }
}
}

#tabbrowser-tabs,
#tabbrowser-tabs > .tabbrowser-arrowscrollbox,
#tabbrowser-tabs[positionpinnedtabs] > .tabbrowser-arrowscrollbox > .tabbrowser-tab[pinned] {
  min-height: var(--tab-min-height);
}

.tab-stack {
  min-height: inherit;
}

@supports -moz-bool-pref("layout.css.emulate-moz-box-with-flex") {
  .tab-stack {
    /* Needed to allow tabs to shrink to be skinnier than their page-title: */
    min-width: 0;
  }

  .tabbrowser-arrowscrollbox > .arrowscrollbox-scrollbox {
    /* Needed to prevent tabstrip from growing as wide as the sum of the tabs'
       page-title widths (when we'd rather have it be as wide as the window and
       compress the tabs to their minimum size): */
    max-width: 100%;
  }
}

.tabbrowser-tab {
  -moz-appearance: none;
  background-color: transparent;
  border-radius: 0;
  border-width: 0;
  margin: 0 !important /* override tabbox.css */;
  padding: 0 !important /* override tabbox.css */;
  -moz-box-align: stretch;
}

/* The selected tab should appear above the border between the tabs toolbar and
   the navigation toolbar. */
.tabbrowser-tab[visuallyselected=true] {
  position: relative;
  z-index: 2;
}

.tab-content {
  padding: 0 9px;
}

:root:not([uidensity=compact]) .tab-content[pinned] {
  padding: 0 12px;
}

:root[sessionrestored] .tab-loading-burst {
  position: relative;
  overflow: hidden;
}

:root[sessionrestored] .tab-loading-burst::before {
  position: absolute;
  content: "";
  /* We set the width to be a percentage of the tab's width so that we can use
     the `scale` transform to scale it up to the full size of the tab when the
     burst occurs. We also need to set the margin-inline-start so that the
     center of the burst matches the center of the favicon. */
  width: 5%;
  height: 100%;
  /* Center the burst over the .tab-loading-burst; it's 9px from the edge thanks
     to .tab-content, plus 8px more since .tab-loading-burst is 16px wide. */
  margin-inline-start: calc(17px - 2.5%);
}

:root[sessionrestored] .tab-loading-burst[pinned]::before {
  /* This is like the margin-inline-start rule above, except that icons for
     pinned tabs are 12px from the edge. */
  margin-inline-start: calc(20px - 2.5%);
}

:root[sessionrestored] .tab-loading-burst[bursting]::before {
  background-image: url("chrome://browser/skin/tabbrowser/loading-burst.svg");
  background-position: center center;
  background-size: 100% auto;
  background-repeat: no-repeat;
  animation: tab-burst-animation 375ms cubic-bezier(0,0,.58,1);
  -moz-context-properties: fill;
  fill: var(--tab-loading-fill);
}

:root[sessionrestored] .tab-loading-burst[bursting][notselectedsinceload]::before {
  animation-name: tab-burst-animation-light;
}

@keyframes tab-burst-animation {
  0% {
    opacity: 0.4;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(40);
  }
}

@keyframes tab-burst-animation-light {
  0% {
    opacity: 0.2;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(40);
  }
}

.tab-throbber,
.tab-icon-pending,
.tab-icon-image,
.tab-sharing-icon-overlay,
.tab-icon-sound,
.tab-close-button {
  margin-top: 1px;
}

.tab-throbber,
.tab-throbber-tabslist,
.tab-icon-pending,
.tab-icon-image,
.tab-sharing-icon-overlay {
  height: 16px;
  width: 16px;
}

.tab-throbber:not([pinned]),
.tab-sharing-icon-overlay:not([pinned]),
.tab-icon-pending:not([pinned]),
.tab-icon-image:not([pinned]) {
  margin-inline-end: 6px;
}

:root[sessionrestored] .tab-throbber[busy] {
  position: relative;
  overflow: hidden;
}

:root[sessionrestored] .tab-throbber[busy]::before {
  content: "";
  position: absolute;
  background-image: url("chrome://browser/skin/tabbrowser/loading.svg");
  background-position: left center;
  background-repeat: no-repeat;
  width: 480px;
  height: 100%;
  animation: tab-throbber-animation 1.05s steps(30) infinite;
  -moz-context-properties: fill;

  /* XXX: It would be nice to transition between the "connecting" color and the
     "loading" color (see the `.tab-throbber[progress]::before` rule below);
     however, that currently forces main thread painting. When this is fixed
     (after WebRender lands), we can do something like
     `transition: fill 0.333s, opacity 0.333s;` */

  fill: currentColor;
  opacity: 0.7;
}

:root[sessionrestored] .tab-throbber[busy]:-moz-locale-dir(rtl)::before {
  animation-name: tab-throbber-animation-rtl;
}

@keyframes tab-throbber-animation {
  0% { transform: translateX(0); }
  100% { transform: translateX(-100%); }
}

@keyframes tab-throbber-animation-rtl {
  0% { transform: translateX(0); }
  100% { transform: translateX(100%); }
}

#TabsToolbar[brighttext] .tab-throbber[busy]:not([selected=true])::before {
  /* Don't change the --tab-loading-fill variable because this should only affect
     tabs that are not visually selected. */
  fill: #717171;
  opacity: 1;
}

:root[sessionrestored] .tab-throbber[progress]::before {
  fill: var(--tab-loading-fill);
  opacity: 1;
}

#TabsToolbar[brighttext] .tab-throbber[progress]:not([selected=true])::before {
  /* Don't change the --tab-loading-fill variable because this should only affect
     tabs that are not visually selected. */
  fill: #84c1ff;
}

.tab-icon-image {
  list-style-image: url("chrome://mozapps/skin/places/defaultFavicon.svg");
  -moz-context-properties: fill;
  fill: currentColor;
}

.tab-icon-image[sharing]:not([selected]),
.tab-sharing-icon-overlay {
  animation: 3s linear tab-sharing-icon-pulse infinite;
}

@keyframes tab-sharing-icon-pulse {
  0%, 16.66%, 83.33%, 100% {
    opacity: 0;
  }
  33.33%, 66.66% {
    opacity: 1;
  }
}

.tab-icon-image[sharing]:not([selected]) {
  animation-delay: -1.5s;
}

.tab-sharing-icon-overlay {
  /* 16px of the icon + 6px of margin-inline-end of .tab-icon-image */
  margin-inline-start: -22px;
  position: relative;
  -moz-context-properties: fill;
  fill: rgb(224, 41, 29);
}

.tab-sharing-icon-overlay[pinned] {
  margin-inline-start: -16px;
}

.tab-sharing-icon-overlay[sharing="camera"] {
  list-style-image: url("chrome://browser/skin/notification-icons/camera.svg");
}

.tab-sharing-icon-overlay[sharing="microphone"] {
  list-style-image: url("chrome://browser/skin/notification-icons/microphone.svg");
}

.tab-sharing-icon-overlay[sharing="screen"] {
  list-style-image: url("chrome://browser/skin/notification-icons/screen.svg");
}

.tab-icon-overlay {
  width: 16px;
  height: 16px;
  margin-top: -8px;
  margin-inline-start: -15px;
  margin-inline-end: -1px;
  position: relative;
}

.tab-icon-overlay[pinned] {
  margin-inline-start: -6px;
  margin-inline-end: -10px;
}

.tab-icon-overlay[crashed] {
  list-style-image: url("chrome://browser/skin/tabbrowser/crashed.svg");
}

.tab-icon-overlay[soundplaying],
.tab-icon-overlay[muted]:not([crashed]),
.tab-icon-overlay[activemedia-blocked]:not([crashed]) {
  border-radius: 10px;
  -moz-context-properties: fill;
  fill: currentColor;
}

.tab-icon-overlay[soundplaying]:hover,
.tab-icon-overlay[muted]:not([crashed]):hover,
.tab-icon-overlay[activemedia-blocked]:not([crashed]):hover {
  background-color: white;
  color: black;
}

.tab-icon-overlay[soundplaying] {
  list-style-image: url("chrome://browser/skin/tabbrowser/tab-audio-playing-small.svg");
}

.tab-icon-overlay[muted]:not([crashed]) {
  list-style-image: url("chrome://browser/skin/tabbrowser/tab-audio-muted-small.svg");
}

.tab-icon-overlay[activemedia-blocked]:not([crashed]) {
  list-style-image: url("chrome://browser/skin/tabbrowser/tab-audio-blocked-small.svg");
}

.tab-throbber-tabslist[busy] {
  list-style-image: url("chrome://browser/skin/tabbrowser/tab-connecting.png");
}

.tab-throbber-tabslist[progress] {
  list-style-image: url("chrome://browser/skin/tabbrowser/tab-loading.png");
}

:root[lwt-popup-brighttext] .tab-throbber-tabslist[progress]:not([selected=true]) {
  list-style-image: url("chrome://browser/skin/tabbrowser/tab-loading-inverted.png");
}

@media (min-resolution: 1.1dppx) {
  .tab-throbber-tabslist[busy] {
    list-style-image: url("chrome://browser/skin/tabbrowser/tab-connecting@2x.png");
  }

  .tab-throbber-tabslist[progress] {
    list-style-image: url("chrome://browser/skin/tabbrowser/tab-loading@2x.png");
  }

  :root[lwt-popup-brighttext] .tab-throbber-tabslist[progress]:not([selected=true]) {
    list-style-image: url("chrome://browser/skin/tabbrowser/tab-loading-inverted@2x.png");
  }
}

.tab-label {
  margin-inline-end: 0;
  margin-inline-start: 0;
  /* Maintain consistent alignment in case of font fallback for non-Latin characters. */
  line-height: 1.7em;
}

.tab-close-button {
  margin-inline-end: -2px;
  -moz-context-properties: fill, fill-opacity, stroke-opacity;
  stroke-opacity: var(--toolbarbutton-icon-fill-opacity);
}

:root[uidensity=touch] .tab-close-button {
  margin-inline-end: -9px;
  padding: 10px calc(9px - 2px);
}

.tab-icon-sound {
  margin-inline-start: 1px;
  width: 16px;
  height: 16px;
  padding: 0;
  -moz-context-properties: fill;
  fill: currentColor;
}

.tab-icon-sound[soundplaying],
.tab-icon-sound[muted],
.tab-icon-sound[activemedia-blocked] {
  list-style-image: url(chrome://browser/skin/tabbrowser/tab-audio-playing.svg);
}

.tab-icon-sound[muted] {
  list-style-image: url(chrome://browser/skin/tabbrowser/tab-audio-muted.svg);
}

.tab-icon-sound[activemedia-blocked] {
  list-style-image: url(chrome://browser/skin/tabbrowser/tab-audio-blocked.svg);
}

.tab-icon-sound[pictureinpicture] {
  list-style-image: url(chrome://global/skin/media/pictureinpicture.svg);
  width: 14px;
  height: 14px;
}

:root[lwtheme-image] .tab-icon-sound:-moz-lwtheme-darktext[pictureinpicture],
:root[lwtheme-image] .tab-icon-sound:-moz-lwtheme-darktext[soundplaying],
:root[lwtheme-image] .tab-icon-sound:-moz-lwtheme-darktext[muted],
:root[lwtheme-image] .tab-icon-sound:-moz-lwtheme-darktext[activemedia-blocked] {
  filter: drop-shadow(1px 1px 1px white);
}

:root[lwtheme-image] .tab-icon-sound:-moz-lwtheme-brighttext[pictureinpicture],
:root[lwtheme-image] .tab-icon-sound:-moz-lwtheme-brighttext[soundplaying],
:root[lwtheme-image] .tab-icon-sound:-moz-lwtheme-brighttext[muted],
:root[lwtheme-image] .tab-icon-sound:-moz-lwtheme-brighttext[activemedia-blocked] {
  filter: drop-shadow(1px 1px 1px black);
}

.tab-icon-sound[pictureinpicture]:not(:hover),
.tab-icon-sound[soundplaying]:not(:hover),
.tab-icon-sound[muted]:not(:hover),
.tab-icon-sound[activemedia-blocked]:not(:hover) {
  opacity: .8;
}

.tab-icon-sound[soundplaying-scheduledremoval]:not([muted]):not(:hover),
.tab-icon-overlay[soundplaying-scheduledremoval]:not([muted]):not(:hover) {
  transition: opacity .3s linear var(--soundplaying-removal-delay);
  opacity: 0;
}

/* Tab Overflow */
.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-start-indicator:not([collapsed]),
.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-end-indicator:not([collapsed]) {
  width: 18px;
  background-image: url(chrome://browser/skin/tabbrowser/tab-overflow-indicator.png);
  background-size: 17px 100%;
  background-repeat: no-repeat;
  border-left: 1px solid;
  border-image: linear-gradient(rgba(255,255,255,.2),
                                rgba(255,255,255,.2) calc(100% - 1px - var(--tabs-navbar-shadow-size)),
                                transparent calc(100% - 1px - var(--tabs-navbar-shadow-size)));
  border-image-slice: 1;
  pointer-events: none;
  position: relative;
  z-index: 3; /* the selected tab's z-index + 1 */
}

.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-start-indicator:-moz-locale-dir(rtl),
.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-end-indicator:-moz-locale-dir(ltr) {
  transform: scaleX(-1);
}

.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-start-indicator:not([collapsed]) {
  margin-inline-start: -1px;
  margin-inline-end: -17px;
}

.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-end-indicator:not([collapsed]) {
  margin-inline-start: -17px;
  margin-inline-end: -1px;
}

.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-start-indicator[collapsed],
.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-end-indicator[collapsed] {
  opacity: 0;
}

.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-start-indicator,
.tabbrowser-arrowscrollbox > .arrowscrollbox-overflow-end-indicator {
  transition: opacity 150ms ease;
}

.tabbrowser-tab:not([visuallyselected=true]):not([multiselected]),
.tabbrowser-tab:-moz-lwtheme {
  color: inherit;
}

.tabbrowser-tab[multiselected]:-moz-lwtheme,
.tabbrowser-tab[visuallyselected=true]:-moz-lwtheme {
  color: var(--lwt-tab-text, var(--toolbar-color));
}

.tab-line {
  height: 2px;
}

/* Selected tab */

.tab-background {
  border: 1px none transparent;
  background-clip: padding-box;
}

#toolbar-menubar:not([autohide=true]) + #TabsToolbar,
:root:not([tabsintitlebar]),
:root[extradragspace] {
  --tabs-top-border-width: 1px;
}

#toolbar-menubar:not([autohide=true]) + #TabsToolbar .tabbrowser-tab > .tab-stack > .tab-background,
:root:not([tabsintitlebar]) .tab-background,
:root[extradragspace] .tab-background {
  border-top-style: solid;
}

.tab-background[multiselected=true],
.tab-background[selected=true] {
  border-top-color: var(--tabs-border-color);
  background-color: var(--toolbar-bgcolor);
  background-image: var(--toolbar-bgimage);
  background-repeat: repeat-x;
}

/* Add a translucent color on top of multiselected tabs */
.tab-background[multiselected=true]:not([selected=true]) > .tab-background-inner {
  background: currentColor;
  opacity: .1;
}

.tab-line[multiselected],
.tab-line[selected=true] {
  background-color: var(--tab-line-color);
}

/*
 * LightweightThemeConsumer will set the current lightweight theme's header
 * image to the lwt-header-image variable, used in each of the following rulesets.
 */

/* Lightweight theme on tabs */
#tabbrowser-tabs:not([movingtab]) > .tabbrowser-arrowscrollbox > .tabbrowser-tab > .tab-stack > .tab-background[multiselected=true]:-moz-lwtheme,
#tabbrowser-tabs:not([movingtab]) > .tabbrowser-arrowscrollbox > .tabbrowser-tab > .tab-stack > .tab-background[selected=true]:-moz-lwtheme {
  background-attachment: scroll, scroll, fixed;
  background-color: transparent;
  background-image: linear-gradient(var(--lwt-selected-tab-background-color, transparent), var(--lwt-selected-tab-background-color, transparent)),
                    linear-gradient(var(--toolbar-bgcolor), var(--toolbar-bgcolor)),
                    var(--lwt-header-image, none);
  background-position: 0 0, 0 0, right top;
  background-repeat: repeat-x, repeat-x, no-repeat;
  background-size: auto 100%, auto 100%, auto auto;
}

/* Tab hover */

.tabbrowser-tab:hover > .tab-stack > .tab-background:not([selected=true]):not([multiselected]) {
  background-color: rgba(0,0,0,.1);
}

#TabsToolbar[brighttext] .tabbrowser-tab:hover > .tab-stack > .tab-background:not([selected=true]):not([multiselected]) {
  background-color: rgba(255,255,255,.1);
}

.tab-line:not([selected=true]):not([multiselected]) {
  opacity: 0;
  transform: scaleX(0);
  transition: transform 250ms var(--animation-easing-function), opacity 250ms var(--animation-easing-function);
}

.tabbrowser-tab:hover > .tab-stack > .tab-background > .tab-line:not([selected=true]):not([multiselected]) {
  background-color: rgba(0,0,0,.2);
  opacity: 1;
  transform: none;
}

#TabsToolbar[brighttext] .tabbrowser-tab:hover > .tab-stack > .tab-background > .tab-line:not([selected=true]):not([multiselected]) {
  background-color: rgba(255,255,255,.2);
}

.tabbrowser-tab:hover > .tab-stack > .tab-background > .tab-line[multiselected]:not([selected=true]) {
  opacity: 0.5;
}

/* Pinned tabs */

/* Pinned tab separators need position: absolute when positioned (during overflow). */
#tabbrowser-tabs[positionpinnedtabs] > .tabbrowser-arrowscrollbox > .tabbrowser-tab[pinned]::after {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
}

#tabbrowser-tabs[positionpinnedtabs] > .tabbrowser-arrowscrollbox > .tabbrowser-tab[pinned]:-moz-locale-dir(rtl)::after {
  right: unset;
  left: 0;
}

#tabbrowser-tabs[positionpinnedtabs] > .tabbrowser-arrowscrollbox > .tabbrowser-tab[pinned] > .tab-stack {
  border-inline-end: 1px solid transparent;
}

.tabbrowser-tab:-moz-any([image], [pinned]) > .tab-stack > .tab-content[attention]:not([selected="true"]),
.tabbrowser-tab > .tab-stack > .tab-content[pinned][titlechanged]:not([selected="true"]) {
  background-image: url(chrome://browser/skin/tabbrowser/indicator-tab-attention.svg);
  background-position: center bottom calc(-4px + var(--tabs-navbar-shadow-size));
  background-repeat: no-repeat;
}

.tabbrowser-tab[image] > .tab-stack > .tab-content[attention]:not([pinned]):not([selected="true"]) {
  background-position-x: left 11px;
}

.tabbrowser-tab[image] > .tab-stack > .tab-content[attention]:not([pinned]):not([selected="true"]):-moz-locale-dir(rtl) {
  background-position-x: right 11px;
}

.tab-label[attention]:not([selected="true"]) {
  font-weight: bold;
}

/* Drag space */

.titlebar-spacer[type="pre-tabs"],
.titlebar-spacer[type="post-tabs"] {
  width: 40px;
}

@media (max-width: 500px) {
  .titlebar-spacer[type="post-tabs"] {
    display: none;
  }
}

/* Tab separators */

.titlebar-spacer[type="pre-tabs"] {
  border-inline-end: 1px solid var(--lwt-background-tab-separator-color, currentColor);
  opacity: 0.2;
}

.tabbrowser-tab::after,
.tabbrowser-tab::before {
  border-left: 1px solid var(--lwt-background-tab-separator-color, currentColor);
  margin-top: 5px;
  margin-bottom: 4px;
  opacity: 0.3;
}

/* Move the ::before pseudo-element on tabs 1px to the left
 * to avoid resizing the tab when the pseudo-element is removed again
 * (this currently happens when a tab is dragged and dropped).
 *
 * Note that this doesn't perfectly solve the issue (dragged tabs
 * may still resize very slightly) on some DPI settings with uneven
 * scaling factors on Windows, because of bug 477157.
 */
.tabbrowser-tab::before {
  margin-inline-start: -1px;
}

:root[tabsintitlebar]:not([extradragspace]) #toolbar-menubar[autohide=true] + #TabsToolbar .tabbrowser-tab::after,
/* Show full height tab separators on hover and multiselection. */
.tabbrowser-tab:hover::after,
#tabbrowser-tabs:not([movingtab]) > .tabbrowser-arrowscrollbox > .tabbrowser-tab[beforehovered]::after,
.tabbrowser-tab[multiselected]::after,
#tabbrowser-tabs:not([movingtab]) > .tabbrowser-arrowscrollbox > .tabbrowser-tab[before-multiselected]::after {
  margin-top: var(--tabs-top-border-width);
  margin-bottom: 0;
}

/* Show full height tab separators on selected tabs. */
#tabbrowser-tabs:not([movingtab]) > .tabbrowser-arrowscrollbox > .tabbrowser-tab[beforeselected-visible]::after,
#tabbrowser-tabs[movingtab] > .tabbrowser-arrowscrollbox > .tabbrowser-tab[visuallyselected]::before,
.tabbrowser-tab[visuallyselected]::after {
  border-color: var(--tabs-border-color);
  margin-top: 0;
  margin-bottom: var(--tabs-navbar-shadow-size);
  opacity: 1;
}

.tabbrowser-tab::after,
/* Also show separators beside the selected tab when dragging it. */
#tabbrowser-tabs[movingtab] > .tabbrowser-arrowscrollbox > .tabbrowser-tab[visuallyselected]::before {
  content: "";
  display: -moz-box;
}

/* Tab bar scroll arrows */

.tabbrowser-arrowscrollbox > .scrollbutton-up,
.tabbrowser-arrowscrollbox > .scrollbutton-down {
  list-style-image: url(chrome://browser/skin/arrow-left.svg) !important;
  -moz-context-properties: fill, fill-opacity;
  fill: var(--lwt-toolbarbutton-icon-fill, currentColor);
  fill-opacity: var(--toolbarbutton-icon-fill-opacity);
  color: inherit;
}

.tabbrowser-arrowscrollbox > .scrollbutton-up:-moz-locale-dir(rtl),
.tabbrowser-arrowscrollbox > .scrollbutton-down:-moz-locale-dir(ltr) {
  transform: scaleX(-1);
}

/* New tab button */

#tabs-newtab-button,
#TabsToolbar #new-tab-button {
  list-style-image: url(chrome://browser/skin/add.svg);
}

/* All tabs button and menupopup */

#alltabs-button {
  list-style-image: url(chrome://global/skin/icons/arrow-dropdown-16.svg);
}

#tabbrowser-tabs[hiddensoundplaying] ~ #alltabs-button > .toolbarbutton-badge-stack > .toolbarbutton-badge {
  background: transparent url(chrome://browser/skin/tabbrowser/badge-audio-playing.svg);
  box-shadow: none;
  /* Match the color of the button, rather than label default. */
  color: inherit;
  display: block;
  -moz-context-properties: fill, fill-opacity;
  fill: currentColor;
  fill-opacity: var(--toolbarbutton-icon-fill-opacity);
  /* "!important" is necessary to override the rule in toolbarbutton.css */
  margin: -7px 0 0 !important;
  margin-inline-end: -4px !important;
  min-width: 12px;
  min-height: 12px;
}

#allTabsMenu-allTabsView {
  --blue-40: #45a1ff;
  max-width: 42em;
}

/* The list of tabs is in its own panel-subview-body which will scroll. We don't
   want any padding above/below the scrollbars, so remove the padding/margin
   from the separator and outer panel-subview-body. */
#allTabsMenu-allTabsView > .panel-subview-body {
  padding-bottom: 0;
}

#allTabsMenu-tabsSeparator {
  margin-bottom: 0;
}

.all-tabs-item > .all-tabs-secondary-button {
  padding: 0;
  padding-inline-start: 6px;
  opacity: .8;
  -moz-context-properties: fill;
  fill: currentColor;
}

.all-tabs-secondary-button:hover {
  opacity: 1;
}

.all-tabs-item:hover {
  background-color: var(--arrowpanel-dimmed)
}

.all-tabs-item:hover > .all-tabs-button,
.all-tabs-item:hover > .all-tabs-secondary-button {
  /* Since the background is set on the item, don't set it on the children. */
  background-color: transparent !important;
}

.all-tabs-item[selected] {
  font-weight: bold;
  box-shadow: inset 4px 0 var(--blue-40);
}

.all-tabs-item[selected]:-moz-locale-dir(rtl) {
  box-shadow: inset -4px 0 var(--blue-40);
}

.all-tabs-button {
  list-style-image: url("chrome://mozapps/skin/places/defaultFavicon.svg");
}

.all-tabs-secondary-button > label {
  display: none;
  margin: 0 5.5px;
}

.all-tabs-secondary-button[soundplaying] {
  list-style-image: url(chrome://browser/skin/tabbrowser/tab-audio-playing.svg);
}

.all-tabs-secondary-button[muted] {
  list-style-image: url(chrome://browser/skin/tabbrowser/tab-audio-muted.svg);
}

#allTabsMenu-undoCloseTab {
  list-style-image: url(chrome://browser/skin/undo.svg);
}

#allTabsMenu-undoCloseTab > .toolbarbutton-icon:-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}

#allTabsMenu-searchTabs {
  list-style-image: url(chrome://browser/skin/search-glass.svg);
}

#tabbrowser-tabs {
  /* override the global style to allow the selected tab to be above the nav-bar */
  z-index: auto;
}

#TabsToolbar {
  min-height: 0;
}

#TabsToolbar:not(:-moz-lwtheme) {
  -moz-appearance: menubar;
  color: -moz-menubartext;
}

#nav-bar {
  -moz-window-dragging: drag;
}

@media (-moz-menubar-drag) {
  #TabsToolbar {
    -moz-window-dragging: drag;
  }
}

.keyboard-focused-tab > .tab-stack > .tab-content,
.tabbrowser-tab:focus:not([aria-activedescendant]) > .tab-stack > .tab-content {
  outline: 1px dotted;
  outline-offset: -6px;
}

#context_reloadTab {
  list-style-image: url("moz-icon://stock/gtk-refresh?size=menu");
}

#context_closeOtherTabs {
  list-style-image: url("moz-icon://stock/gtk-clear?size=menu");
}

#context_closeOtherTabs[disabled] {
  list-style-image: url("moz-icon://stock/gtk-clear?size=menu&state=disabled");
}

#context_undoCloseTab {
  list-style-image: url("moz-icon://stock/gtk-undelete?size=menu");
}

#context_closeTab {
  list-style-image: url("moz-icon://stock/gtk-close?size=menu");
}

/* Tab drag and drop */
.tab-drop-indicator {
  list-style-image: url(chrome://browser/skin/tabbrowser/tabDragIndicator.png);
  margin-bottom: -9px;
  z-index: 3;
}

/* Tab bar scroll arrows */

.tabbrowser-arrowscrollbox > .scrollbutton-up > .toolbarbutton-icon,
.tabbrowser-arrowscrollbox > .scrollbutton-down > .toolbarbutton-icon {
  -moz-appearance: none;
}

/* All tabs menupopup */

.alltabs-item[selected="true"] {
  font-weight: bold;
}

/* Status panel */

#statuspanel-label {
  margin: 0;
  padding: 2px 4px;
  background-color: -moz-dialog;
  border: 1px none ThreeDShadow;
  border-top-style: solid;
  color: -moz-dialogText;
  text-shadow: none;
}

#statuspanel:not([mirror]) > #statuspanel-inner > #statuspanel-label:-moz-locale-dir(ltr),
#statuspanel[mirror] > #statuspanel-inner > #statuspanel-label:-moz-locale-dir(rtl) {
  border-right-style: solid;
  border-top-right-radius: .3em;
  margin-right: 1em;
}

#statuspanel:not([mirror]) > #statuspanel-inner > #statuspanel-label:-moz-locale-dir(rtl),
#statuspanel[mirror] > #statuspanel-inner > #statuspanel-label:-moz-locale-dir(ltr) {
  border-left-style: solid;
  border-top-left-radius: .3em;
  margin-left: 1em;
}


html|*.pointerlockfswarning {
  align-items: center;
  background: rgba(45, 62, 72, 0.9);
  border: 2px solid #fafafa;
  box-shadow: 0px 0px 5px 2px rgba(0, 0, 0, 0.5);
  border-radius: 8px;
  padding: 24px 16px;
  font: message-box;
}

html|*.pointerlockfswarning::before {
  margin: 0;
  width: 24px; height: 24px;
}

html|*.pointerlockfswarning[data-identity="verifiedIdentity"]::before,
html|*.pointerlockfswarning[data-identity="verifiedDomain"]::before {
  content: url("chrome://browser/skin/fullscreen/secure.svg");
}

html|*.pointerlockfswarning[data-identity="unknownIdentity"]::before {
  content: url("chrome://browser/skin/fullscreen/insecure.svg");
}

html|*.pointerlockfswarning-domain-text,
html|*.pointerlockfswarning-generic-text {
  font-size: 21px;
  font-weight: lighter;
  color: #fafafa;
  margin: 0 16px;
}

html|*.pointerlockfswarning-domain {
  font-weight: bold;
  margin: 0;
}

html|*#fullscreen-exit-button {
  margin: 0;
}


/* Ctrl-Tab */

#ctrlTab-panel {
  -moz-appearance: none;
  background: hsla(0,0%,40%,.85);
  color: white;
  border-style: none;
  padding: 20px 10px 10px;
  font-weight: bold;
}

.ctrlTab-preview {
  -moz-appearance: none;
  /* !important overrides the :hover color from button.css on Linux */
  color: inherit !important;
  /* remove the :-moz-focusring outline from button.css on Windows */
  outline: none !important;
  margin: 0;
  text-shadow: 0 0 1px hsl(0,0%,12%), 0 0 2px hsl(0,0%,12%);
}

.ctrlTab-canvas > html|img,
.ctrlTab-canvas > html|canvas {
  min-width: inherit;
  max-width: inherit;
  min-height: inherit;
  max-height: inherit;
}

.ctrlTab-favicon-container {
  position: relative;
  -moz-box-pack: end;
}

.ctrlTab-favicon[src] {
  width: 42px;
  height: 42px;
  margin-top: -44px;
  margin-bottom: 2px;
  margin-inline-end: -6px;
  padding: 5px;
  background-color: #F9F9FA;
  border-radius: 6px;
  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1);
}

.ctrlTab-canvas {
  box-shadow: 1px 1px 2px hsl(0,0%,12%);
  margin-bottom: 8px;
}

.ctrlTab-preview-inner {
  padding: 8px;
  border: 2px solid transparent;
  border-radius: .5em;
}

.ctrlTab-preview:not(#ctrlTab-showAll) > .ctrlTab-preview-inner {
  margin: -10px -10px 0;
}

#ctrlTab-showAll:not(:focus) > .ctrlTab-preview-inner {
  background-color: rgba(255,255,255,.2);
}

.ctrlTab-preview:focus > .ctrlTab-preview-inner {
  background-color: rgba(0,0,0,.75);
  text-shadow: none;
  border-color: #45a1ff;
}

.ctrlTab-label {
  text-align: center;
}

#ctrlTab-showAll {
  margin-top: .5em;
}


/* Customization mode */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* Customization mode */

:root {
  --drag-drop-transition-duration: .3s;
}

:root[customizing] .customization-target:not(#widget-overflow-fixed-list) {
  min-width: 100px;
}

#customization-container {
  background-color: var(--toolbar-bgcolor);
  background-image: var(--toolbar-bgimage);
  color: var(--toolbar-color);
}

:root[lwtheme-image] #customization-container {
  background-color: transparent;
  background-image: linear-gradient(var(--toolbar-bgcolor), var(--toolbar-non-lwt-bgcolor) 45px);
  color: var(--toolbar-non-lwt-textcolor);
  text-shadow: none;
}

#customization-palette {
  padding: 5px 20px 20px;
}

#customization-header {
  font-weight: 600;
  font-size: 1.2em;
  margin: 20px 20px 15px;
}

:root[lwtheme-image] #customization-header {
  text-shadow: 0 0 1em var(--toolbar-non-lwt-bgcolor),
               0 0 1em var(--toolbar-non-lwt-bgcolor),
               0 0 .5em var(--toolbar-non-lwt-bgcolor);
}

#customization-panel-container {
  padding: 0 20px 25px;
}

#customization-footer {
  border-top: 1px solid rgba(0,0,0,.15);
  padding: 10px;
}


.customizationmode-button > .box-inherit > .box-inherit > .button-icon,
.customizationmode-button > .button-box > .button-icon {
  height: 16px;
}

#customization-uidensity-button > .box-inherit > .box-inherit > .button-text,
#customization-lwtheme-button > .box-inherit > .box-inherit > .button-text {
  margin-inline-start: 6px;
}

#customization-uidensity-button > .box-inherit > .box-inherit > .button-icon,
#customization-lwtheme-button > .box-inherit > .box-inherit > .button-icon {
  width: 16px;
  height: 16px;
  border-radius: 2px;
  background-size: contain;
}

#customization-lwtheme-button > .box-inherit > .box-inherit > .button-icon {
  background-image: url("resource://gre/modules/themes/default/icon.svg");
}

#customization-uidensity-button > .box-inherit > .box-inherit > .button-icon {
  background-image: url("chrome://browser/skin/customizableui/density-normal.svg");
}

#widget-overflow-fixed-list > toolbarpaletteitem[place="menu-panel"],
toolbarpaletteitem[place="toolbar"] {
  transition: border-width 250ms ease-in-out;
}

toolbarpaletteitem[mousedown] {
  cursor: -moz-grabbing;
}

toolbarpaletteitem[place="palette"],
toolbarpaletteitem[place="menu-panel"] {
  transition: transform var(--drag-drop-transition-duration) ease-in-out;
}

#customization-palette {
  transition: opacity .3s ease-in-out;
  opacity: 0;
}

#customization-palette[showing="true"] {
  opacity: 1;
}

toolbarpaletteitem toolbarbutton[disabled] {
  color: inherit !important;
}

#widget-overflow-fixed-list > toolbarpaletteitem[notransition][place="menu-panel"],
toolbarpaletteitem[notransition][place="toolbar"],
toolbarpaletteitem[notransition][place="palette"],
toolbarpaletteitem[notransition][place="menu-panel"] {
  transition: none;
}

toolbarpaletteitem > toolbarbutton > .toolbarbutton-icon,
toolbarpaletteitem > toolbarbutton > .toolbarbutton-badge-stack > .toolbarbutton-icon,
toolbarpaletteitem > #search-container,
toolbarpaletteitem > toolbaritem.toolbaritem-combined-buttons {
  transition: transform var(--drag-drop-transition-duration) cubic-bezier(.6, 2, .75, 1.5) !important;
}

toolbarpaletteitem[mousedown] > toolbarbutton > .toolbarbutton-icon,
toolbarpaletteitem[mousedown] > toolbarbutton > .toolbarbutton-badge-stack > .toolbarbutton-icon {
  transform: scale(1.3);
}

toolbarpaletteitem[mousedown] > #search-container,
toolbarpaletteitem[mousedown] > toolbaritem.toolbaritem-combined-buttons {
  transform: scale(1.1);
}

/* Override the toolkit styling for items being dragged over. */
toolbarpaletteitem[place="toolbar"] {
  border-left-width: 0;
  border-right-width: 0;
  margin-right: 0;
  margin-left: 0;
}
#widget-overflow-fixed-list > toolbarpaletteitem[place="menu-panel"] {
  border-top: 0px solid transparent;
  border-bottom: 0px solid transparent;
}

#customization-palette:not([hidden]) {
  margin-bottom: 20px;
}

#customization-palette .toolbarbutton-1 {
  fill: currentColor;
}

toolbarpaletteitem[place="palette"]:-moz-focusring,
toolbarpaletteitem[place="menu-panel"]:-moz-focusring,
toolbarpaletteitem[place="toolbar"]:-moz-focusring {
  outline-width: 0;
}

toolbarpaletteitem[place="palette"]:not([mousedown="true"]):-moz-focusring,
toolbarpaletteitem[place="menu-panel"]:not([mousedown="true"]):-moz-focusring,
toolbarpaletteitem[place="toolbar"]:not([mousedown="true"]):-moz-focusring {
  /* Delay adding the focusring back until after the transform transition completes. */
  transition: outline-width .01s linear var(--drag-drop-transition-duration);
  outline: 1px dotted;
  -moz-outline-radius: 2.5px;
}

toolbarpaletteitem[place="toolbar"]:not([mousedown="true"]):-moz-focusring {
  outline-offset: -5px;
}

toolbarpaletteitem[place=palette]::after {
  content: attr(title);
  display: block;
  text-align: center;
}

toolbarpaletteitem[place=palette] > toolbarspring {
  width: 7em;
  min-width: 7em;
  outline: 1px solid;
  outline-offset: -8px;
  opacity: .6;
  min-height: 37px;
  max-height: 37px;
}

toolbarpaletteitem[place=toolbar] > toolbarspring {
  outline: 1px solid;
  outline-offset: -2px;
  opacity: .6;
  margin-top: 5px;
  margin-bottom: 5px;
}

#wrapper-edit-controls > #edit-controls > toolbarbutton > .toolbarbutton-icon {
  opacity: 1; /* To ensure these buttons always look enabled in customize mode */
}

#wrapper-zoom-controls[place="palette"] > #zoom-controls > #zoom-reset-button,
#wrapper-zoom-controls[place="palette"] > #zoom-controls > #zoom-reset-button + separator {
  display: none;
}

/* Squeeze together the multi-button toolbarpaletteitems: */
#wrapper-zoom-controls[place="palette"] > #zoom-controls > #zoom-out-button,
#wrapper-edit-controls[place="palette"] > #edit-controls > #cut-button {
  -moz-box-align: end;
}
#wrapper-zoom-controls[place="palette"] > #zoom-controls > #zoom-in-button,
#wrapper-edit-controls[place="palette"] > #edit-controls > #paste-button {
  -moz-box-align: start;
}
#wrapper-edit-controls[place="palette"] > #edit-controls > #copy-button {
  -moz-box-flex: 0;
}

#customization-uidensity-touch-spacer {
  border-top: 1px solid ThreeDLightShadow;
  margin: 0 -10px 10px;
}

#customization-uidensity-autotouchmode-checkbox {
  margin-bottom: 10px;
}

#customization-uidensity-menu,
#customization-lwtheme-menu {
  font: menu;
}

#customization-lwtheme-menu {
  /* Make the panel padding uniform across all platforms due to the
     styling of the section headers and footer. */
  --arrowpanel-padding: 10px;
}

#customization-uidensity-menu {
  --arrowpanel-padding: 5px 10px;
}

.customization-uidensity-menuitem > .menu-iconic-left > .menu-iconic-icon,
.customization-lwtheme-menu-theme > .toolbarbutton-icon {
  width: 32px;
  height: 32px;
  margin: 5px;
}

.customization-uidensity-menuitem,
.customization-lwtheme-menu-theme {
  -moz-appearance: none;
  border: 1px solid transparent;
  margin: 0 -5px 5px;
  padding-top: 0;
  padding-inline-end: 5px;
  padding-bottom: 0;
  padding-inline-start: 0;
}

.customization-uidensity-menuitem {
  color: inherit;
}

#customization-uidensity-menuitem-normal {
  list-style-image: url("chrome://browser/skin/customizableui/density-normal.svg");
}

#customization-uidensity-menuitem-compact {
  list-style-image: url("chrome://browser/skin/customizableui/density-compact.svg");
}

#customization-uidensity-menuitem-touch {
  list-style-image: url("chrome://browser/skin/customizableui/density-touch.svg");
}

.customization-uidensity-menuitem[active="true"],
.customization-uidensity-menuitem:hover,
.customization-lwtheme-menu-theme[active="true"],
.customization-lwtheme-menu-theme:hover {
  background-color: var(--arrowpanel-dimmed);
  border-color: var(--panel-separator-color);
}

.customization-uidensity-menuitem[active="true"],
.customization-uidensity-menuitem:hover:active,
.customization-lwtheme-menu-theme[active="true"],
.customization-lwtheme-menu-theme:hover:active {
  background-color: var(--arrowpanel-dimmed-further);
}

.customization-uidensity-menuitem > .menu-iconic-text,
.customization-lwtheme-menu-theme > .toolbarbutton-text {
  text-align: start;
}

#customization-lwtheme-menu-header,
#customization-lwtheme-menu-recommended {
  padding: 10px;
  margin-bottom: 5px;
  text-align: center;
  font-weight: 600;
  border-bottom: 1px solid var(--panel-separator-color);
}

#customization-lwtheme-menu-header,
#customization-lwtheme-menu-recommended,
#customization-lwtheme-menu-footer {
  margin-right: -10px;
  margin-left: -10px;
}

#customization-lwtheme-menu-header {
  margin-top: -10px;
}

#customization-lwtheme-menu-recommended {
  border-top: 1px solid var(--panel-separator-color);
}

#customization-lwtheme-menu-footer {
  background: linear-gradient(var(--arrowpanel-dimmed) 60%, transparent) border-box;
  border-top: 1px solid var(--arrowpanel-dimmed);
  margin-bottom: -10px;
}

.customization-lwtheme-menu-footeritem {
  -moz-appearance: none;
  -moz-box-flex: 1;
  color: inherit;
  border-style: none;
  padding: 10px;
  margin-left: 0;
  margin-right: 0;
}

.customization-lwtheme-menu-footeritem:hover {
  background: linear-gradient(var(--arrowpanel-dimmed) 40%, transparent) padding-box;
}

.customization-lwtheme-menu-footeritem:first-child {
  border-inline-end: 1px solid var(--panel-separator-color);
}

.customization-uidensity-menuitem > .menu-iconic-left > .menu-iconic-icon:-moz-locale-dir(rtl),
.customization-lwtheme-menu-theme > .toolbarbutton-icon:-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}

#customization-uidensity-button > .box-inherit > .box-inherit > .button-icon:-moz-locale-dir(rtl),
#customization-lwtheme-button > .box-inherit > .box-inherit > .button-icon:-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}


#customization-panelWrapper > .panel-arrowcontent {
  color: var(--arrowpanel-color);
  background: var(--arrowpanel-background);
  background-clip: padding-box;
  border: 1px solid var(--arrowpanel-border-color);
  margin: 0;
  box-shadow: 0 0 4px hsla(0,0%,0%,.2);
  max-width: 29em;
}

#customization-panelWrapper > .panel-arrowbox {
  position: relative;
  height: 10px;
  margin-bottom: -1px;
}

/* In customize mode, the overflow button should look both 'disabled' and 'open'.
 * So we make the button fully opaque but fill the icon semi-transparent. */
#nav-bar[customizing] > .overflow-button > .toolbarbutton-icon {
  background-color: var(--toolbarbutton-active-background);
  opacity: 1;
  fill-opacity: 0.4;
}

#customization-panelWrapper > .panel-arrowbox > .panel-arrow[side="top"] {
  list-style-image: url("chrome://global/skin/arrow/panelarrow-vertical.svg");
  -moz-context-properties: fill, stroke;
  fill: var(--arrowpanel-background);
  stroke: var(--arrowpanel-border-color);
  /* The arrow needs to point to the overflow button. The numbers involved
   * are:
   * overflow button width: (16px + 2 * 2px padding
   * + 2 * toolbarbutton-inner-padding)
   * hamburger button width: (16px + 2 * 5px padding
   * + 2 * toolbarbutton-inner-padding)
   * hamburger button border + margin: 1px + 2px
   * The total desired offset from the right edge of the window is thus:
   * 10px + 1 * toolbarbutton-inner-padding (center of overflow button) +
   * 29px + 2 * toolbarbutton-inner-padding
   * The #customization-panel-container has a 20px margin, so that leaves:
   * 19px + 3 * toolbarbutton-inner-padding
   * Finally, we need to center the arrow, which is 20px wide, so subtract
   * 10px.
   */
  margin-inline-end: calc(9px + 3 * var(--toolbarbutton-inner-padding));
  vertical-align: top;
}

#customization-panelDescription {
  font-size: 1.1em;
  padding: 2px 12px 10px;
  margin: 0;
}

#customization-panelHeader {
  font-size: 1.3em;
  font-weight: 600;
  padding: 2px 12px;
  margin: 0;
}

#customization-panelHolder > #widget-overflow-fixed-list {
  padding-top: 10px;
}

/**
 * We create a ::before pseudoelement that contains a background image to show the
 * drop dragon. This element fades in and out depending on whether the containing
 * panel list is empty and unhovered, or not.
 */
#customization-panelHolder > #widget-overflow-fixed-list:not(:empty) {
  padding-bottom: 50px; /* Make sure there's always space to drop stuff. */
  border-top: 1px solid var(--panel-separator-color);
}

#customization-panelHolder > #widget-overflow-fixed-list::before {
  display: block;
  content: "";
  background-image: url("chrome://browser/skin/customizableui/empty-overflow-panel.png");
  background-position: center bottom 10px;
  background-size: 218px 134px;
  background-repeat: no-repeat;
  opacity: 0;
  transition: opacity 300ms ease-out;
  padding-bottom: 154px; /* 154 = 134 for the image, 10px space on either side. */
  margin-bottom: -154px; /* don't affect positioning of the actual contents */
  pointer-events: none;
}

@media (min-resolution: 1.1dppx) {
  #customization-panelHolder > #widget-overflow-fixed-list::before {
    background-image: url("chrome://browser/skin/customizableui/empty-overflow-panel@2x.png");
  }
}

#customization-panelHolder > #widget-overflow-fixed-list:empty::before {
  opacity: 1;
}
#customization-panelHolder > #widget-overflow-fixed-list[draggingover]:empty::before {
  opacity: 0;
}

#downloads-button-autohide-panel {
  --arrowpanel-padding: 5px 12px;
}

#downloads-button-autohide-checkbox {
  margin: 0;
  padding: 0;
}

#whimsy-button {
  /* Don't need HiDPI versions since the size used will be scaled down to 20x20. */
  list-style-image: url("chrome://browser/skin/customizableui/whimsy.png");
}

#whimsy-button > .button-box > .button-icon {
  width: 16px;
  height: 16px;
}

#customization-palette[whimsypong] {
  /* Keep the palette in the render tree but invisible
     so -moz-element() will work. */
  padding: 0;
  min-height: 0;
  max-height: 0;
}

#customization-palette[whimsypong] > toolbarpaletteitem > toolbarspring {
  margin: 0 -7px;
}

#customization-palette[whimsypong] > toolbarpaletteitem[id^="wrapper-customizableui-special-spring"] {
  font-size: 12px;
}

#wp-lives,
#wp-ball {
  /* Don't need HiDPI versions since the size used will be scaled down to 20x20. */
  background-image: url("chrome://browser/skin/customizableui/whimsy.png");
  background-size: contain;
  width: 20px;
}

#customization-pong-arena {
  width: 300px;
  height: 300px;
  border-left: 1px solid currentColor;
  border-right: 1px solid currentColor;
  margin: 16px auto 0;
  box-sizing: content-box;
}

#customization-palette[whimsypong] > toolbarpaletteitem[kcode],
#customization-pong-arena[kcode] {
  animation-name: kcode;
  animation-timing-function: steps(5);
  animation-duration: 1s;
  animation-iteration-count: infinite;
}

#wp-ball {
  margin-inline-start: -10px;
  margin-top: -10px;
  height: 20px;
}

#wp-player1,
#wp-player2 {
  width: 84px;
  height: calc(39px + 3em);
}

#wp-player1,
#wp-player2,
#wp-ball,
#wp-score {
  position: fixed;
}

#wp-score {
  transform: translateX(-4ch);
}

#wp-score:-moz-locale-dir(rtl) {
  transform: translateX(4ch);
}

#wp-lives {
  transform: translate(-4ch, 1ch);
}

#wp-lives:-moz-locale-dir(rtl) {
  transform: translate(4ch, 1ch);
}

#wp-lives[lives="5"] {
  height: 100px;
}

#wp-lives[lives="4"] {
  height: 80px;
}

#wp-lives[lives="3"] {
  height: 60px;
}

#wp-lives[lives="2"] {
  height: 40px;
}

#wp-lives[lives="1"] {
  height: 20px;
}

#customization-pong-arena[lives="0"] > #wp-ball {
  animation: game-over 4s forwards ease;
}

@keyframes game-over {
  0% {
    transform: scale(1) translateY(0) rotateZ(0);
    opacity: 1;
  }
  15% {
    transform: scale(2) translateY(-10px) rotateZ(-90deg);
  }
  35% {
    opacity: 1;
  }
  65% {
    opacity: 0;
  }
  100% {
    transform: scale(2) translateY(300px) rotateZ(-2.5turn);
    opacity: 0;
  }
}

@keyframes kcode {
  0% { border-color: rgb(195,17,206); color: rgb(195,17,206); }
  20% { border-color: rgb(252,82,27); color: rgb(252,82,27); }
  40% { border-color: rgb(251,179,0); color: rgb(251,179,0); }
  60% { border-color: rgb(105,211,0); color: rgb(105,211,0); }
  80% { border-color: rgb(20,155,249); color: rgb(20,155,249); }
  100% { border-color: rgb(195,17,206); color: rgb(195,17,206); }
}

/* End customization mode */


/* UI Tour */

#UITourHighlightContainer {
  -moz-appearance: none;
  -moz-window-shadow: none;
  border: none;
  background-color: transparent;
  /* This is a buffer to compensate for the movement in the "wobble" effect,
     and for the box-shadow of #UITourHighlight. */
  padding: 4px;
  /* Compensate the displacement caused by padding. */
  margin: -4px;
}

#UITourHighlight {
  background-color: rgba(0, 200, 215, 0.3);
  min-height: 24px;
  min-width: 24px;
}

#UITourHighlight.rounded-highlight {
  border-radius: 4px;
}

#UITourTooltipBody {
  -moz-box-align: start;
}

#UITourTooltipTitleContainer {
  -moz-box-align: start;
  margin-bottom: 10px;
}

#UITourTooltipIcon {
  width: 48px;
  height: 48px;
  margin-inline-end: 10px;
}

#UITourTooltipTitle,
#UITourTooltipDescription {
  max-width: 20rem;
}

#UITourTooltipTitle {
  font-size: 1.45rem;
  font-weight: bold;
  margin: 0;
}

#UITourTooltipDescription {
  margin-inline-start: 0;
  margin-inline-end: 0;
  font-size: 1.15rem;
  line-height: 1.8rem;
  margin-bottom: 0; /* Override global.css */
}

#UITourTooltipClose {
  position: relative;
  -moz-appearance: none;
  border: none;
  background-color: transparent;
  min-width: 0;
  margin-inline-start: 4px;
  margin-top: -2px;
}

#UITourTooltipClose > .toolbarbutton-text {
  display: none;
}

#UITourTooltipButtons {
  -moz-box-pack: end;
  background-color: var(--arrowpanel-dimmed);
  border-top: 1px solid var(--panel-separator-color);
  margin: 10px -16px -16px;
  padding: 16px;
}

#UITourTooltipButtons > label,
#UITourTooltipButtons > button {
  margin: 0 15px;
}

#UITourTooltipButtons > label:first-child,
#UITourTooltipButtons > button:first-child {
  margin-inline-start: 0;
}

#UITourTooltipButtons > label:last-child,
#UITourTooltipButtons > button:last-child {
  margin-inline-end: 0;
}

#UITourTooltipButtons > button[image] > .button-box > .button-icon {
  width: 16px;
  height: 16px;
  margin-inline-end: 5px;
}

#UITourTooltipButtons > label,
#UITourTooltipButtons > button .button-text {
  font-size: 1.15rem;
}

#UITourTooltipButtons > button:not(.button-link) {
  -moz-appearance: none;
  background-color: rgb(251,251,251);
  border-radius: 3px;
  border: 1px solid;
  border-color: rgb(192,192,192);
  color: rgb(71,71,71);
  padding: 4px 30px;
  transition-property: background-color, border-color;
  transition-duration: 150ms;
}

#UITourTooltipButtons > button:not(.button-link):not(:active):hover {
  background-color: hsla(210,4%,10%,.15);
  border-color: hsla(210,4%,10%,.15);
  box-shadow: 0 1px 0 0 hsla(210,4%,10%,.05) inset;
}

#UITourTooltipButtons > label,
#UITourTooltipButtons > button.button-link:not(:hover) {
  -moz-appearance: none;
  background: transparent;
  border: none;
  box-shadow: none;
  color: var(--panel-disabled-color);
  padding-left: 10px;
  padding-right: 10px;
}

/* The primary button gets the same color as the customize button. */
#UITourTooltipButtons > button.button-primary {
  background-color: rgb(116,191,67);
  color: white;
  padding-left: 30px;
  padding-right: 30px;
}

#UITourTooltipButtons > button.button-primary:not(:active):hover {
  background-color: rgb(105,173,61);
}

#UITourHighlight {
  /* Below are some fixes for people without an X compositor on Linux.
     This is why we can't have nice things: */
  /* Animations don't repaint properly without an X compositor. */
  animation-name: none !important;
  /* Opacity rounds to 0 or 1 on Linux without an X compositor, making the
     background color not visible. Anti-aliasing is not available either. Make a
     thicker outline and cancel border-radius for that case. */
     outline: 4px solid rgb(0,200,215);
     border-radius: 0 !important;
}

#UITourTooltipDescription {
  font-size: 1.05rem;
}

#UITourTooltipClose {
  margin-inline-end: -4px;
}

/**
 * Override the --arrowpanel-padding so the background extends
 * to the sides and bottom of the panel.
 */
#UITourTooltipButtons {
  margin-left: -10px;
  margin-bottom: -10px;
}

#context-navigation > .menuitem-iconic {
  -moz-box-flex: 1;
  -moz-box-pack: center;
  -moz-box-align: center;
}

#context-navigation > .menuitem-iconic > .menu-iconic-left {
  -moz-appearance: none;
}

#context-navigation > .menuitem-iconic > .menu-iconic-left > .menu-iconic-icon {
  width: 16px;
  height: 16px;
  margin: 7px;
  -moz-context-properties: fill;
  fill: currentColor;
}

#context-back {
  list-style-image: url("chrome://browser/skin/back.svg");
}

#context-forward {
  list-style-image: url("chrome://browser/skin/forward.svg");
}

#context-reload {
  list-style-image: url("chrome://browser/skin/reload.svg");
}

#context-stop {
  list-style-image: url("chrome://browser/skin/stop.svg");
}

#context-bookmarkpage {
  list-style-image: url("chrome://browser/skin/bookmark-hollow.svg");
}

#context-bookmarkpage[starred=true] {
  list-style-image: url("chrome://browser/skin/bookmark.svg");
}

#context-back:-moz-locale-dir(rtl),
#context-forward:-moz-locale-dir(rtl),
#context-reload:-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}

#context-media-eme-learnmore {
  list-style-image: url("chrome://browser/skin/drm-icon.svg");
  -moz-context-properties: fill;
  fill: currentColor;
}

#context-navigation > .menuitem-iconic > .menu-iconic-left {
  /* override toolkit/themes/linux/global/menu.css */
  padding-inline-end: 0 !important;
  margin-inline-end: 0 !important;
}

.webextension-popup-browser,
.webextension-popup-stack {
  border-radius: inherit;
}

/* We draw to titlebar when Gkt+ CSD is available */
@media (-moz-gtk-csd-available) {
  /* Some Gtk+ themes use non-rectangular toplevel windows. To fully support
   * such themes we need to make toplevel window transparent.
   * It may cause performanance issues so let's put it under a preference
   * and enable it for desktop environment which do that by default.
   * See nsWindow::TopLevelWindowUseARGBVisual() for details. */
  @media (-moz-gtk-csd-transparent-background) {
    :root[tabsintitlebar][sizemode="normal"]:not(:-moz-lwtheme) {
      background-color: transparent;
      -moz-appearance: none;
    }
  }

  :root[tabsintitlebar] > #navigator-toolbox > #titlebar {
    -moz-appearance: -moz-window-titlebar-maximized;
  }
  :root[tabsintitlebar][sizemode="normal"] > #navigator-toolbox > #titlebar {
    -moz-appearance: -moz-window-titlebar;
  }
  :root[tabsintitlebar]:not([inDOMFullscreen]) > #navigator-toolbox > #titlebar:-moz-lwtheme {
    visibility: hidden;
  }
  :root[tabsintitlebar]:not([inDOMFullscreen]) #toolbar-menubar:-moz-lwtheme,
  :root[tabsintitlebar]:not([inDOMFullscreen]) #TabsToolbar:-moz-lwtheme {
    visibility: visible;
  }

  /* When temporarily showing the menu bar, make it at least as tall as the tab
   * bar such that the window controls don't appear to move up. */
  :root[tabsintitlebar] #toolbar-menubar[autohide="true"] {
    height: var(--tab-min-height);
  }
  :root[tabsintitlebar][sizemode="normal"] #toolbar-menubar[autohide="true"] {
    height: calc(var(--tab-min-height) + var(--space-above-tabbar));
  }

  /* Add extra space to titlebar for dragging */
  :root[sizemode="normal"][chromehidden~="menubar"] #TabsToolbar > .toolbar-items,
  :root[sizemode="normal"] #toolbar-menubar[autohide="true"][inactive] + #TabsToolbar > .toolbar-items {
    padding-top: var(--space-above-tabbar);
  }

  /* Make #TabsToolbar transparent as we style underlying #titlebar with
   * -moz-window-titlebar (Gtk+ theme). */
  :root[tabsintitlebar][sizemode="normal"]:not([inFullscreen]) #TabsToolbar,
  :root[tabsintitlebar][sizemode="maximized"] #TabsToolbar,
  :root[tabsintitlebar] #toolbar-menubar {
    -moz-appearance: none;
  }

  /* The button box must appear on top of the navigator-toolbox in order for
   * click and hover mouse events to work properly for the button in the restored
   * window state. Otherwise, elements in the navigator-toolbox, like the menubar,
   * can swallow those events. */
  .titlebar-buttonbox {
    z-index: 1;
    -moz-box-align: center;
  }

  /* Render titlebar command buttons according to system config.
   * Use full scale icons here as the Gtk+ does. */
  @media (-moz-gtk-csd-minimize-button) {
    .titlebar-min {
      -moz-appearance: -moz-window-button-minimize;
    }
  }
  @media (-moz-gtk-csd-minimize-button: 0) {
    .titlebar-min {
      display: none;
    }
  }

  @media (-moz-gtk-csd-maximize-button) {
    .titlebar-max {
      -moz-appearance: -moz-window-button-maximize;
    }
    :root[sizemode="maximized"] .titlebar-max {
      -moz-appearance: -moz-window-button-restore;
    }
  }
  @media (-moz-gtk-csd-maximize-button: 0) {
    .titlebar-max {
      display: none;
    }
  }

  @media (-moz-gtk-csd-close-button) {
    .titlebar-close {
      -moz-appearance: -moz-window-button-close;
    }
  }
  @media (-moz-gtk-csd-close-button: 0) {
    .titlebar-close {
      display: none;
    }
  }
  @media (-moz-gtk-csd-reversed-placement) {
    .titlebar-buttonbox-container,
    .titlebar-close {
      -moz-box-ordinal-group: 0;
    }
  }
}
